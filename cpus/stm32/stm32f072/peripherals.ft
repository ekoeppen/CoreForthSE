\ TEMPLATE FILE for STM32F072x
\ created by svdcutter for Mecrisp-Stellaris Forth by Matthias Koch
\ sdvcutter  takes a CMSIS-SVD file plus a hand edited config.xml file as input
\ By Terry Porter "terry@tjporter.com.au", released under the GPL V2



\ pretty printing words

\ rom

: b32loop. ( u -- ) <# #32 0 DO # BL HOLD LOOP #> TYPE ;

: 1b. ( u -- ) cr
."  3|3|2|2|2|2|2|2|2|2|2|2|1|1|1|1|1|1|1|1|1|1" cr
."  1|0|9|8|7|6|5|4|3|2|1|0|9|8|7|6|5|4|3|2|1|0|9|8|7|6|5|4|3|2|1|0 " cr
@ binary b32loop. decimal cr ;


: b8loop. ( u -- ) <# #8 0 DO # # # # BL HOLD LOOP #> TYPE ;

: 4b. ( u -- ) cr \ Print 4 bit groups
."   07   06   05   04   03   02   01   00  " cr
@ binary b8loop. cr ;


: b16loop. ( u -- ) <# #16 0 DO # # BL HOLD LOOP #> TYPE ;

: 2b. ( u -- ) cr \ Print 2 bit groups
."  15|14|13|12|11|10|09|08|07|06|05|04|03|02|01|00 " cr
@ binary b16loop. cr
;



\ available forth template words as selected by config.xml

$40023000 constant CRC
CRC $0 +  constant  CRC_DR
CRC $4 +  constant  CRC_IDR
CRC $8 +  constant  CRC_CR
CRC $C +  constant  CRC_INIT
: CRC_DR. ." CRC_DR (read-write) $" CRC_DR @ hex. CRC_DR CRC_DR 1b. ;
: CRC_IDR. ." CRC_IDR (read-write) $" CRC_IDR @ hex. CRC_IDR CRC_IDR 1b. ;
: CRC_CR. ." CRC_CR (read-write) $" CRC_CR @ hex. CRC_CR CRC_CR 1b. ;
: CRC_INIT. ." CRC_INIT (read-write) $" CRC_INIT @ hex. CRC_INIT CRC_INIT 1b. ;
: CRC.
CRC_DR.
CRC_IDR.
CRC_CR.
CRC_INIT.
;

$48001400 constant GPIOF
GPIOF $0 +  constant  GPIOF_MODER
GPIOF $4 +  constant  GPIOF_OTYPER
GPIOF $8 +  constant  GPIOF_OSPEEDR
GPIOF $C +  constant  GPIOF_PUPDR
GPIOF $10 +  constant  GPIOF_IDR
GPIOF $14 +  constant  GPIOF_ODR
GPIOF $18 +  constant  GPIOF_BSRR
GPIOF $1C +  constant  GPIOF_LCKR
GPIOF $20 +  constant  GPIOF_AFRL
GPIOF $24 +  constant  GPIOF_AFRH
GPIOF $28 +  constant  GPIOF_BRR
: GPIOF_MODER. ." GPIOF_MODER (read-write) $" GPIOF_MODER @ hex. GPIOF_MODER GPIOF_MODER 1b. ;
: GPIOF_OTYPER. ." GPIOF_OTYPER (read-write) $" GPIOF_OTYPER @ hex. GPIOF_OTYPER GPIOF_OTYPER 1b. ;
: GPIOF_OSPEEDR. ." GPIOF_OSPEEDR (read-write) $" GPIOF_OSPEEDR @ hex. GPIOF_OSPEEDR GPIOF_OSPEEDR 1b. ;
: GPIOF_PUPDR. ." GPIOF_PUPDR (read-write) $" GPIOF_PUPDR @ hex. GPIOF_PUPDR GPIOF_PUPDR 1b. ;
: GPIOF_IDR. ." GPIOF_IDR (read-only) $" GPIOF_IDR @ hex. GPIOF_IDR GPIOF_IDR 1b. ;
: GPIOF_ODR. ." GPIOF_ODR (read-write) $" GPIOF_ODR @ hex. GPIOF_ODR GPIOF_ODR 1b. ;
: GPIOF_BSRR. ." GPIOF_BSRR (write-only) $" GPIOF_BSRR @ hex. GPIOF_BSRR GPIOF_BSRR 1b. ;
: GPIOF_LCKR. ." GPIOF_LCKR (read-write) $" GPIOF_LCKR @ hex. GPIOF_LCKR GPIOF_LCKR 1b. ;
: GPIOF_AFRL. ." GPIOF_AFRL (read-write) $" GPIOF_AFRL @ hex. GPIOF_AFRL GPIOF_AFRL 1b. ;
: GPIOF_AFRH. ." GPIOF_AFRH (read-write) $" GPIOF_AFRH @ hex. GPIOF_AFRH GPIOF_AFRH 1b. ;
: GPIOF_BRR. ." GPIOF_BRR (write-only) $" GPIOF_BRR @ hex. GPIOF_BRR GPIOF_BRR 1b. ;
: GPIOF.
GPIOF_MODER.
GPIOF_OTYPER.
GPIOF_OSPEEDR.
GPIOF_PUPDR.
GPIOF_IDR.
GPIOF_ODR.
GPIOF_BSRR.
GPIOF_LCKR.
GPIOF_AFRL.
GPIOF_AFRH.
GPIOF_BRR.
;

$48000C00 constant GPIOD
GPIOD $0 +  constant  GPIOD_MODER
GPIOD $4 +  constant  GPIOD_OTYPER
GPIOD $8 +  constant  GPIOD_OSPEEDR
GPIOD $C +  constant  GPIOD_PUPDR
GPIOD $10 +  constant  GPIOD_IDR
GPIOD $14 +  constant  GPIOD_ODR
GPIOD $18 +  constant  GPIOD_BSRR
GPIOD $1C +  constant  GPIOD_LCKR
GPIOD $20 +  constant  GPIOD_AFRL
GPIOD $24 +  constant  GPIOD_AFRH
GPIOD $28 +  constant  GPIOD_BRR
: GPIOD_MODER. ." GPIOD_MODER (read-write) $" GPIOD_MODER @ hex. GPIOD_MODER GPIOD_MODER 1b. ;
: GPIOD_OTYPER. ." GPIOD_OTYPER (read-write) $" GPIOD_OTYPER @ hex. GPIOD_OTYPER GPIOD_OTYPER 1b. ;
: GPIOD_OSPEEDR. ." GPIOD_OSPEEDR (read-write) $" GPIOD_OSPEEDR @ hex. GPIOD_OSPEEDR GPIOD_OSPEEDR 1b. ;
: GPIOD_PUPDR. ." GPIOD_PUPDR (read-write) $" GPIOD_PUPDR @ hex. GPIOD_PUPDR GPIOD_PUPDR 1b. ;
: GPIOD_IDR. ." GPIOD_IDR (read-only) $" GPIOD_IDR @ hex. GPIOD_IDR GPIOD_IDR 1b. ;
: GPIOD_ODR. ." GPIOD_ODR (read-write) $" GPIOD_ODR @ hex. GPIOD_ODR GPIOD_ODR 1b. ;
: GPIOD_BSRR. ." GPIOD_BSRR (write-only) $" GPIOD_BSRR @ hex. GPIOD_BSRR GPIOD_BSRR 1b. ;
: GPIOD_LCKR. ." GPIOD_LCKR (read-write) $" GPIOD_LCKR @ hex. GPIOD_LCKR GPIOD_LCKR 1b. ;
: GPIOD_AFRL. ." GPIOD_AFRL (read-write) $" GPIOD_AFRL @ hex. GPIOD_AFRL GPIOD_AFRL 1b. ;
: GPIOD_AFRH. ." GPIOD_AFRH (read-write) $" GPIOD_AFRH @ hex. GPIOD_AFRH GPIOD_AFRH 1b. ;
: GPIOD_BRR. ." GPIOD_BRR (write-only) $" GPIOD_BRR @ hex. GPIOD_BRR GPIOD_BRR 1b. ;
: GPIOD.
GPIOD_MODER.
GPIOD_OTYPER.
GPIOD_OSPEEDR.
GPIOD_PUPDR.
GPIOD_IDR.
GPIOD_ODR.
GPIOD_BSRR.
GPIOD_LCKR.
GPIOD_AFRL.
GPIOD_AFRH.
GPIOD_BRR.
;

$48000800 constant GPIOC
GPIOC $0 +  constant  GPIOC_MODER
GPIOC $4 +  constant  GPIOC_OTYPER
GPIOC $8 +  constant  GPIOC_OSPEEDR
GPIOC $C +  constant  GPIOC_PUPDR
GPIOC $10 +  constant  GPIOC_IDR
GPIOC $14 +  constant  GPIOC_ODR
GPIOC $18 +  constant  GPIOC_BSRR
GPIOC $1C +  constant  GPIOC_LCKR
GPIOC $20 +  constant  GPIOC_AFRL
GPIOC $24 +  constant  GPIOC_AFRH
GPIOC $28 +  constant  GPIOC_BRR
: GPIOC_MODER. ." GPIOC_MODER (read-write) $" GPIOC_MODER @ hex. GPIOC_MODER GPIOC_MODER 1b. ;
: GPIOC_OTYPER. ." GPIOC_OTYPER (read-write) $" GPIOC_OTYPER @ hex. GPIOC_OTYPER GPIOC_OTYPER 1b. ;
: GPIOC_OSPEEDR. ." GPIOC_OSPEEDR (read-write) $" GPIOC_OSPEEDR @ hex. GPIOC_OSPEEDR GPIOC_OSPEEDR 1b. ;
: GPIOC_PUPDR. ." GPIOC_PUPDR (read-write) $" GPIOC_PUPDR @ hex. GPIOC_PUPDR GPIOC_PUPDR 1b. ;
: GPIOC_IDR. ." GPIOC_IDR (read-only) $" GPIOC_IDR @ hex. GPIOC_IDR GPIOC_IDR 1b. ;
: GPIOC_ODR. ." GPIOC_ODR (read-write) $" GPIOC_ODR @ hex. GPIOC_ODR GPIOC_ODR 1b. ;
: GPIOC_BSRR. ." GPIOC_BSRR (write-only) $" GPIOC_BSRR @ hex. GPIOC_BSRR GPIOC_BSRR 1b. ;
: GPIOC_LCKR. ." GPIOC_LCKR (read-write) $" GPIOC_LCKR @ hex. GPIOC_LCKR GPIOC_LCKR 1b. ;
: GPIOC_AFRL. ." GPIOC_AFRL (read-write) $" GPIOC_AFRL @ hex. GPIOC_AFRL GPIOC_AFRL 1b. ;
: GPIOC_AFRH. ." GPIOC_AFRH (read-write) $" GPIOC_AFRH @ hex. GPIOC_AFRH GPIOC_AFRH 1b. ;
: GPIOC_BRR. ." GPIOC_BRR (write-only) $" GPIOC_BRR @ hex. GPIOC_BRR GPIOC_BRR 1b. ;
: GPIOC.
GPIOC_MODER.
GPIOC_OTYPER.
GPIOC_OSPEEDR.
GPIOC_PUPDR.
GPIOC_IDR.
GPIOC_ODR.
GPIOC_BSRR.
GPIOC_LCKR.
GPIOC_AFRL.
GPIOC_AFRH.
GPIOC_BRR.
;

$48000400 constant GPIOB
GPIOB $0 +  constant  GPIOB_MODER
GPIOB $4 +  constant  GPIOB_OTYPER
GPIOB $8 +  constant  GPIOB_OSPEEDR
GPIOB $C +  constant  GPIOB_PUPDR
GPIOB $10 +  constant  GPIOB_IDR
GPIOB $14 +  constant  GPIOB_ODR
GPIOB $18 +  constant  GPIOB_BSRR
GPIOB $1C +  constant  GPIOB_LCKR
GPIOB $20 +  constant  GPIOB_AFRL
GPIOB $24 +  constant  GPIOB_AFRH
GPIOB $28 +  constant  GPIOB_BRR
: GPIOB_MODER. ." GPIOB_MODER (read-write) $" GPIOB_MODER @ hex. GPIOB_MODER GPIOB_MODER 1b. ;
: GPIOB_OTYPER. ." GPIOB_OTYPER (read-write) $" GPIOB_OTYPER @ hex. GPIOB_OTYPER GPIOB_OTYPER 1b. ;
: GPIOB_OSPEEDR. ." GPIOB_OSPEEDR (read-write) $" GPIOB_OSPEEDR @ hex. GPIOB_OSPEEDR GPIOB_OSPEEDR 1b. ;
: GPIOB_PUPDR. ." GPIOB_PUPDR (read-write) $" GPIOB_PUPDR @ hex. GPIOB_PUPDR GPIOB_PUPDR 1b. ;
: GPIOB_IDR. ." GPIOB_IDR (read-only) $" GPIOB_IDR @ hex. GPIOB_IDR GPIOB_IDR 1b. ;
: GPIOB_ODR. ." GPIOB_ODR (read-write) $" GPIOB_ODR @ hex. GPIOB_ODR GPIOB_ODR 1b. ;
: GPIOB_BSRR. ." GPIOB_BSRR (write-only) $" GPIOB_BSRR @ hex. GPIOB_BSRR GPIOB_BSRR 1b. ;
: GPIOB_LCKR. ." GPIOB_LCKR (read-write) $" GPIOB_LCKR @ hex. GPIOB_LCKR GPIOB_LCKR 1b. ;
: GPIOB_AFRL. ." GPIOB_AFRL (read-write) $" GPIOB_AFRL @ hex. GPIOB_AFRL GPIOB_AFRL 1b. ;
: GPIOB_AFRH. ." GPIOB_AFRH (read-write) $" GPIOB_AFRH @ hex. GPIOB_AFRH GPIOB_AFRH 1b. ;
: GPIOB_BRR. ." GPIOB_BRR (write-only) $" GPIOB_BRR @ hex. GPIOB_BRR GPIOB_BRR 1b. ;
: GPIOB.
GPIOB_MODER.
GPIOB_OTYPER.
GPIOB_OSPEEDR.
GPIOB_PUPDR.
GPIOB_IDR.
GPIOB_ODR.
GPIOB_BSRR.
GPIOB_LCKR.
GPIOB_AFRL.
GPIOB_AFRH.
GPIOB_BRR.
;

$48001000 constant GPIOE
GPIOE $0 +  constant  GPIOE_MODER
GPIOE $4 +  constant  GPIOE_OTYPER
GPIOE $8 +  constant  GPIOE_OSPEEDR
GPIOE $C +  constant  GPIOE_PUPDR
GPIOE $10 +  constant  GPIOE_IDR
GPIOE $14 +  constant  GPIOE_ODR
GPIOE $18 +  constant  GPIOE_BSRR
GPIOE $1C +  constant  GPIOE_LCKR
GPIOE $20 +  constant  GPIOE_AFRL
GPIOE $24 +  constant  GPIOE_AFRH
GPIOE $28 +  constant  GPIOE_BRR
: GPIOE_MODER. ." GPIOE_MODER (read-write) $" GPIOE_MODER @ hex. GPIOE_MODER GPIOE_MODER 1b. ;
: GPIOE_OTYPER. ." GPIOE_OTYPER (read-write) $" GPIOE_OTYPER @ hex. GPIOE_OTYPER GPIOE_OTYPER 1b. ;
: GPIOE_OSPEEDR. ." GPIOE_OSPEEDR (read-write) $" GPIOE_OSPEEDR @ hex. GPIOE_OSPEEDR GPIOE_OSPEEDR 1b. ;
: GPIOE_PUPDR. ." GPIOE_PUPDR (read-write) $" GPIOE_PUPDR @ hex. GPIOE_PUPDR GPIOE_PUPDR 1b. ;
: GPIOE_IDR. ." GPIOE_IDR (read-only) $" GPIOE_IDR @ hex. GPIOE_IDR GPIOE_IDR 1b. ;
: GPIOE_ODR. ." GPIOE_ODR (read-write) $" GPIOE_ODR @ hex. GPIOE_ODR GPIOE_ODR 1b. ;
: GPIOE_BSRR. ." GPIOE_BSRR (write-only) $" GPIOE_BSRR @ hex. GPIOE_BSRR GPIOE_BSRR 1b. ;
: GPIOE_LCKR. ." GPIOE_LCKR (read-write) $" GPIOE_LCKR @ hex. GPIOE_LCKR GPIOE_LCKR 1b. ;
: GPIOE_AFRL. ." GPIOE_AFRL (read-write) $" GPIOE_AFRL @ hex. GPIOE_AFRL GPIOE_AFRL 1b. ;
: GPIOE_AFRH. ." GPIOE_AFRH (read-write) $" GPIOE_AFRH @ hex. GPIOE_AFRH GPIOE_AFRH 1b. ;
: GPIOE_BRR. ." GPIOE_BRR (write-only) $" GPIOE_BRR @ hex. GPIOE_BRR GPIOE_BRR 1b. ;
: GPIOE.
GPIOE_MODER.
GPIOE_OTYPER.
GPIOE_OSPEEDR.
GPIOE_PUPDR.
GPIOE_IDR.
GPIOE_ODR.
GPIOE_BSRR.
GPIOE_LCKR.
GPIOE_AFRL.
GPIOE_AFRH.
GPIOE_BRR.
;

$48000000 constant GPIOA
GPIOA $0 +  constant  GPIOA_MODER
GPIOA $4 +  constant  GPIOA_OTYPER
GPIOA $8 +  constant  GPIOA_OSPEEDR
GPIOA $C +  constant  GPIOA_PUPDR
GPIOA $10 +  constant  GPIOA_IDR
GPIOA $14 +  constant  GPIOA_ODR
GPIOA $18 +  constant  GPIOA_BSRR
GPIOA $1C +  constant  GPIOA_LCKR
GPIOA $20 +  constant  GPIOA_AFRL
GPIOA $24 +  constant  GPIOA_AFRH
GPIOA $28 +  constant  GPIOA_BRR
: GPIOA_MODER. ." GPIOA_MODER (read-write) $" GPIOA_MODER @ hex. GPIOA_MODER GPIOA_MODER 1b. ;
: GPIOA_OTYPER. ." GPIOA_OTYPER (read-write) $" GPIOA_OTYPER @ hex. GPIOA_OTYPER GPIOA_OTYPER 1b. ;
: GPIOA_OSPEEDR. ." GPIOA_OSPEEDR (read-write) $" GPIOA_OSPEEDR @ hex. GPIOA_OSPEEDR GPIOA_OSPEEDR 1b. ;
: GPIOA_PUPDR. ." GPIOA_PUPDR (read-write) $" GPIOA_PUPDR @ hex. GPIOA_PUPDR GPIOA_PUPDR 1b. ;
: GPIOA_IDR. ." GPIOA_IDR (read-only) $" GPIOA_IDR @ hex. GPIOA_IDR GPIOA_IDR 1b. ;
: GPIOA_ODR. ." GPIOA_ODR (read-write) $" GPIOA_ODR @ hex. GPIOA_ODR GPIOA_ODR 1b. ;
: GPIOA_BSRR. ." GPIOA_BSRR (write-only) $" GPIOA_BSRR @ hex. GPIOA_BSRR GPIOA_BSRR 1b. ;
: GPIOA_LCKR. ." GPIOA_LCKR (read-write) $" GPIOA_LCKR @ hex. GPIOA_LCKR GPIOA_LCKR 1b. ;
: GPIOA_AFRL. ." GPIOA_AFRL (read-write) $" GPIOA_AFRL @ hex. GPIOA_AFRL GPIOA_AFRL 1b. ;
: GPIOA_AFRH. ." GPIOA_AFRH (read-write) $" GPIOA_AFRH @ hex. GPIOA_AFRH GPIOA_AFRH 1b. ;
: GPIOA_BRR. ." GPIOA_BRR (write-only) $" GPIOA_BRR @ hex. GPIOA_BRR GPIOA_BRR 1b. ;
: GPIOA.
GPIOA_MODER.
GPIOA_OTYPER.
GPIOA_OSPEEDR.
GPIOA_PUPDR.
GPIOA_IDR.
GPIOA_ODR.
GPIOA_BSRR.
GPIOA_LCKR.
GPIOA_AFRL.
GPIOA_AFRH.
GPIOA_BRR.
;

$40013000 constant SPI1
SPI1 $0 +  constant  SPI1_CR1
SPI1 $4 +  constant  SPI1_CR2
SPI1 $8 +  constant  SPI1_SR
SPI1 $C +  constant  SPI1_DR
SPI1 $10 +  constant  SPI1_CRCPR
SPI1 $14 +  constant  SPI1_RXCRCR
SPI1 $18 +  constant  SPI1_TXCRCR
SPI1 $1C +  constant  SPI1_I2SCFGR
SPI1 $20 +  constant  SPI1_I2SPR
: SPI1_CR1. ." SPI1_CR1 (read-write) $" SPI1_CR1 @ hex. SPI1_CR1 SPI1_CR1 1b. ;
: SPI1_CR2. ." SPI1_CR2 (read-write) $" SPI1_CR2 @ hex. SPI1_CR2 SPI1_CR2 1b. ;
: SPI1_SR. ." SPI1_SR () $" SPI1_SR @ hex. SPI1_SR SPI1_SR 1b. ;
: SPI1_DR. ." SPI1_DR (read-write) $" SPI1_DR @ hex. SPI1_DR SPI1_DR 1b. ;
: SPI1_CRCPR. ." SPI1_CRCPR (read-write) $" SPI1_CRCPR @ hex. SPI1_CRCPR SPI1_CRCPR 1b. ;
: SPI1_RXCRCR. ." SPI1_RXCRCR (read-only) $" SPI1_RXCRCR @ hex. SPI1_RXCRCR SPI1_RXCRCR 1b. ;
: SPI1_TXCRCR. ." SPI1_TXCRCR (read-only) $" SPI1_TXCRCR @ hex. SPI1_TXCRCR SPI1_TXCRCR 1b. ;
: SPI1_I2SCFGR. ." SPI1_I2SCFGR (read-write) $" SPI1_I2SCFGR @ hex. SPI1_I2SCFGR SPI1_I2SCFGR 1b. ;
: SPI1_I2SPR. ." SPI1_I2SPR (read-write) $" SPI1_I2SPR @ hex. SPI1_I2SPR SPI1_I2SPR 1b. ;
: SPI1.
SPI1_CR1.
SPI1_CR2.
SPI1_SR.
SPI1_DR.
SPI1_CRCPR.
SPI1_RXCRCR.
SPI1_TXCRCR.
SPI1_I2SCFGR.
SPI1_I2SPR.
;

$40003800 constant SPI2
SPI2 $0 +  constant  SPI2_CR1
SPI2 $4 +  constant  SPI2_CR2
SPI2 $8 +  constant  SPI2_SR
SPI2 $C +  constant  SPI2_DR
SPI2 $10 +  constant  SPI2_CRCPR
SPI2 $14 +  constant  SPI2_RXCRCR
SPI2 $18 +  constant  SPI2_TXCRCR
SPI2 $1C +  constant  SPI2_I2SCFGR
SPI2 $20 +  constant  SPI2_I2SPR
: SPI2_CR1. ." SPI2_CR1 (read-write) $" SPI2_CR1 @ hex. SPI2_CR1 SPI2_CR1 1b. ;
: SPI2_CR2. ." SPI2_CR2 (read-write) $" SPI2_CR2 @ hex. SPI2_CR2 SPI2_CR2 1b. ;
: SPI2_SR. ." SPI2_SR () $" SPI2_SR @ hex. SPI2_SR SPI2_SR 1b. ;
: SPI2_DR. ." SPI2_DR (read-write) $" SPI2_DR @ hex. SPI2_DR SPI2_DR 1b. ;
: SPI2_CRCPR. ." SPI2_CRCPR (read-write) $" SPI2_CRCPR @ hex. SPI2_CRCPR SPI2_CRCPR 1b. ;
: SPI2_RXCRCR. ." SPI2_RXCRCR (read-only) $" SPI2_RXCRCR @ hex. SPI2_RXCRCR SPI2_RXCRCR 1b. ;
: SPI2_TXCRCR. ." SPI2_TXCRCR (read-only) $" SPI2_TXCRCR @ hex. SPI2_TXCRCR SPI2_TXCRCR 1b. ;
: SPI2_I2SCFGR. ." SPI2_I2SCFGR (read-write) $" SPI2_I2SCFGR @ hex. SPI2_I2SCFGR SPI2_I2SCFGR 1b. ;
: SPI2_I2SPR. ." SPI2_I2SPR (read-write) $" SPI2_I2SPR @ hex. SPI2_I2SPR SPI2_I2SPR 1b. ;
: SPI2.
SPI2_CR1.
SPI2_CR2.
SPI2_SR.
SPI2_DR.
SPI2_CRCPR.
SPI2_RXCRCR.
SPI2_TXCRCR.
SPI2_I2SCFGR.
SPI2_I2SPR.
;

$40007400 constant DAC
DAC $0 +  constant  DAC_CR
DAC $4 +  constant  DAC_SWTRIGR
DAC $8 +  constant  DAC_DHR12R1
DAC $C +  constant  DAC_DHR12L1
DAC $10 +  constant  DAC_DHR8R1
DAC $2C +  constant  DAC_DOR1
DAC $34 +  constant  DAC_SR
: DAC_CR. ." DAC_CR (read-write) $" DAC_CR @ hex. DAC_CR DAC_CR 1b. ;
: DAC_SWTRIGR. ." DAC_SWTRIGR (write-only) $" DAC_SWTRIGR @ hex. DAC_SWTRIGR DAC_SWTRIGR 1b. ;
: DAC_DHR12R1. ." DAC_DHR12R1 (read-write) $" DAC_DHR12R1 @ hex. DAC_DHR12R1 DAC_DHR12R1 1b. ;
: DAC_DHR12L1. ." DAC_DHR12L1 (read-write) $" DAC_DHR12L1 @ hex. DAC_DHR12L1 DAC_DHR12L1 1b. ;
: DAC_DHR8R1. ." DAC_DHR8R1 (read-write) $" DAC_DHR8R1 @ hex. DAC_DHR8R1 DAC_DHR8R1 1b. ;
: DAC_DOR1. ." DAC_DOR1 (read-only) $" DAC_DOR1 @ hex. DAC_DOR1 DAC_DOR1 1b. ;
: DAC_SR. ." DAC_SR (read-write) $" DAC_SR @ hex. DAC_SR DAC_SR 1b. ;
: DAC.
DAC_CR.
DAC_SWTRIGR.
DAC_DHR12R1.
DAC_DHR12L1.
DAC_DHR8R1.
DAC_DOR1.
DAC_SR.
;

$40007000 constant PWR
PWR $0 +  constant  PWR_CR
PWR $4 +  constant  PWR_CSR
: PWR_CR. ." PWR_CR (read-write) $" PWR_CR @ hex. PWR_CR PWR_CR 1b. ;
: PWR_CSR. ." PWR_CSR () $" PWR_CSR @ hex. PWR_CSR PWR_CSR 1b. ;
: PWR.
PWR_CR.
PWR_CSR.
;

$40005400 constant I2C1
I2C1 $0 +  constant  I2C1_CR1
I2C1 $4 +  constant  I2C1_CR2
I2C1 $8 +  constant  I2C1_OAR1
I2C1 $C +  constant  I2C1_OAR2
I2C1 $10 +  constant  I2C1_TIMINGR
I2C1 $14 +  constant  I2C1_TIMEOUTR
I2C1 $18 +  constant  I2C1_ISR
I2C1 $1C +  constant  I2C1_ICR
I2C1 $20 +  constant  I2C1_PECR
I2C1 $24 +  constant  I2C1_RXDR
I2C1 $28 +  constant  I2C1_TXDR
: I2C1_CR1. ." I2C1_CR1 () $" I2C1_CR1 @ hex. I2C1_CR1 I2C1_CR1 1b. ;
: I2C1_CR2. ." I2C1_CR2 (read-write) $" I2C1_CR2 @ hex. I2C1_CR2 I2C1_CR2 1b. ;
: I2C1_OAR1. ." I2C1_OAR1 (read-write) $" I2C1_OAR1 @ hex. I2C1_OAR1 I2C1_OAR1 1b. ;
: I2C1_OAR2. ." I2C1_OAR2 (read-write) $" I2C1_OAR2 @ hex. I2C1_OAR2 I2C1_OAR2 1b. ;
: I2C1_TIMINGR. ." I2C1_TIMINGR (read-write) $" I2C1_TIMINGR @ hex. I2C1_TIMINGR I2C1_TIMINGR 1b. ;
: I2C1_TIMEOUTR. ." I2C1_TIMEOUTR (read-write) $" I2C1_TIMEOUTR @ hex. I2C1_TIMEOUTR I2C1_TIMEOUTR 1b. ;
: I2C1_ISR. ." I2C1_ISR () $" I2C1_ISR @ hex. I2C1_ISR I2C1_ISR 1b. ;
: I2C1_ICR. ." I2C1_ICR (write-only) $" I2C1_ICR @ hex. I2C1_ICR I2C1_ICR 1b. ;
: I2C1_PECR. ." I2C1_PECR (read-only) $" I2C1_PECR @ hex. I2C1_PECR I2C1_PECR 1b. ;
: I2C1_RXDR. ." I2C1_RXDR (read-only) $" I2C1_RXDR @ hex. I2C1_RXDR I2C1_RXDR 1b. ;
: I2C1_TXDR. ." I2C1_TXDR (read-write) $" I2C1_TXDR @ hex. I2C1_TXDR I2C1_TXDR 1b. ;
: I2C1.
I2C1_CR1.
I2C1_CR2.
I2C1_OAR1.
I2C1_OAR2.
I2C1_TIMINGR.
I2C1_TIMEOUTR.
I2C1_ISR.
I2C1_ICR.
I2C1_PECR.
I2C1_RXDR.
I2C1_TXDR.
;

$40005800 constant I2C2
I2C2 $0 +  constant  I2C2_CR1
I2C2 $4 +  constant  I2C2_CR2
I2C2 $8 +  constant  I2C2_OAR1
I2C2 $C +  constant  I2C2_OAR2
I2C2 $10 +  constant  I2C2_TIMINGR
I2C2 $14 +  constant  I2C2_TIMEOUTR
I2C2 $18 +  constant  I2C2_ISR
I2C2 $1C +  constant  I2C2_ICR
I2C2 $20 +  constant  I2C2_PECR
I2C2 $24 +  constant  I2C2_RXDR
I2C2 $28 +  constant  I2C2_TXDR
: I2C2_CR1. ." I2C2_CR1 () $" I2C2_CR1 @ hex. I2C2_CR1 I2C2_CR1 1b. ;
: I2C2_CR2. ." I2C2_CR2 (read-write) $" I2C2_CR2 @ hex. I2C2_CR2 I2C2_CR2 1b. ;
: I2C2_OAR1. ." I2C2_OAR1 (read-write) $" I2C2_OAR1 @ hex. I2C2_OAR1 I2C2_OAR1 1b. ;
: I2C2_OAR2. ." I2C2_OAR2 (read-write) $" I2C2_OAR2 @ hex. I2C2_OAR2 I2C2_OAR2 1b. ;
: I2C2_TIMINGR. ." I2C2_TIMINGR (read-write) $" I2C2_TIMINGR @ hex. I2C2_TIMINGR I2C2_TIMINGR 1b. ;
: I2C2_TIMEOUTR. ." I2C2_TIMEOUTR (read-write) $" I2C2_TIMEOUTR @ hex. I2C2_TIMEOUTR I2C2_TIMEOUTR 1b. ;
: I2C2_ISR. ." I2C2_ISR () $" I2C2_ISR @ hex. I2C2_ISR I2C2_ISR 1b. ;
: I2C2_ICR. ." I2C2_ICR (write-only) $" I2C2_ICR @ hex. I2C2_ICR I2C2_ICR 1b. ;
: I2C2_PECR. ." I2C2_PECR (read-only) $" I2C2_PECR @ hex. I2C2_PECR I2C2_PECR 1b. ;
: I2C2_RXDR. ." I2C2_RXDR (read-only) $" I2C2_RXDR @ hex. I2C2_RXDR I2C2_RXDR 1b. ;
: I2C2_TXDR. ." I2C2_TXDR (read-write) $" I2C2_TXDR @ hex. I2C2_TXDR I2C2_TXDR 1b. ;
: I2C2.
I2C2_CR1.
I2C2_CR2.
I2C2_OAR1.
I2C2_OAR2.
I2C2_TIMINGR.
I2C2_TIMEOUTR.
I2C2_ISR.
I2C2_ICR.
I2C2_PECR.
I2C2_RXDR.
I2C2_TXDR.
;

$40003000 constant IWDG
IWDG $0 +  constant  IWDG_KR
IWDG $4 +  constant  IWDG_PR
IWDG $8 +  constant  IWDG_RLR
IWDG $C +  constant  IWDG_SR
IWDG $10 +  constant  IWDG_WINR
: IWDG_KR. ." IWDG_KR (write-only) $" IWDG_KR @ hex. IWDG_KR IWDG_KR 1b. ;
: IWDG_PR. ." IWDG_PR (read-write) $" IWDG_PR @ hex. IWDG_PR IWDG_PR 1b. ;
: IWDG_RLR. ." IWDG_RLR (read-write) $" IWDG_RLR @ hex. IWDG_RLR IWDG_RLR 1b. ;
: IWDG_SR. ." IWDG_SR (read-only) $" IWDG_SR @ hex. IWDG_SR IWDG_SR 1b. ;
: IWDG_WINR. ." IWDG_WINR (read-write) $" IWDG_WINR @ hex. IWDG_WINR IWDG_WINR 1b. ;
: IWDG.
IWDG_KR.
IWDG_PR.
IWDG_RLR.
IWDG_SR.
IWDG_WINR.
;

$40002C00 constant WWDG
WWDG $0 +  constant  WWDG_CR
WWDG $4 +  constant  WWDG_CFR
WWDG $8 +  constant  WWDG_SR
: WWDG_CR. ." WWDG_CR (read-write) $" WWDG_CR @ hex. WWDG_CR WWDG_CR 1b. ;
: WWDG_CFR. ." WWDG_CFR (read-write) $" WWDG_CFR @ hex. WWDG_CFR WWDG_CFR 1b. ;
: WWDG_SR. ." WWDG_SR (read-write) $" WWDG_SR @ hex. WWDG_SR WWDG_SR 1b. ;
: WWDG.
WWDG_CR.
WWDG_CFR.
WWDG_SR.
;

$40012C00 constant TIM1
TIM1 $0 +  constant  TIM1_CR1
TIM1 $4 +  constant  TIM1_CR2
TIM1 $8 +  constant  TIM1_SMCR
TIM1 $C +  constant  TIM1_DIER
TIM1 $10 +  constant  TIM1_SR
TIM1 $14 +  constant  TIM1_EGR
TIM1 $18 +  constant  TIM1_CCMR1_Output
TIM1 $18 +  constant  TIM1_CCMR1_Input
TIM1 $1C +  constant  TIM1_CCMR2_Output
TIM1 $1C +  constant  TIM1_CCMR2_Input
TIM1 $20 +  constant  TIM1_CCER
TIM1 $24 +  constant  TIM1_CNT
TIM1 $28 +  constant  TIM1_PSC
TIM1 $2C +  constant  TIM1_ARR
TIM1 $30 +  constant  TIM1_RCR
TIM1 $34 +  constant  TIM1_CCR1
TIM1 $38 +  constant  TIM1_CCR2
TIM1 $3C +  constant  TIM1_CCR3
TIM1 $40 +  constant  TIM1_CCR4
TIM1 $44 +  constant  TIM1_BDTR
TIM1 $48 +  constant  TIM1_DCR
TIM1 $4C +  constant  TIM1_DMAR
: TIM1_CR1. ." TIM1_CR1 (read-write) $" TIM1_CR1 @ hex. TIM1_CR1 TIM1_CR1 1b. ;
: TIM1_CR2. ." TIM1_CR2 (read-write) $" TIM1_CR2 @ hex. TIM1_CR2 TIM1_CR2 1b. ;
: TIM1_SMCR. ." TIM1_SMCR (read-write) $" TIM1_SMCR @ hex. TIM1_SMCR TIM1_SMCR 1b. ;
: TIM1_DIER. ." TIM1_DIER (read-write) $" TIM1_DIER @ hex. TIM1_DIER TIM1_DIER 1b. ;
: TIM1_SR. ." TIM1_SR (read-write) $" TIM1_SR @ hex. TIM1_SR TIM1_SR 1b. ;
: TIM1_EGR. ." TIM1_EGR (write-only) $" TIM1_EGR @ hex. TIM1_EGR TIM1_EGR 1b. ;
: TIM1_CCMR1_Output. ." TIM1_CCMR1_Output (read-write) $" TIM1_CCMR1_Output @ hex. TIM1_CCMR1_Output TIM1_CCMR1_Output 1b. ;
: TIM1_CCMR1_Input. ." TIM1_CCMR1_Input (read-write) $" TIM1_CCMR1_Input @ hex. TIM1_CCMR1_Input TIM1_CCMR1_Input 1b. ;
: TIM1_CCMR2_Output. ." TIM1_CCMR2_Output (read-write) $" TIM1_CCMR2_Output @ hex. TIM1_CCMR2_Output TIM1_CCMR2_Output 1b. ;
: TIM1_CCMR2_Input. ." TIM1_CCMR2_Input (read-write) $" TIM1_CCMR2_Input @ hex. TIM1_CCMR2_Input TIM1_CCMR2_Input 1b. ;
: TIM1_CCER. ." TIM1_CCER (read-write) $" TIM1_CCER @ hex. TIM1_CCER TIM1_CCER 1b. ;
: TIM1_CNT. ." TIM1_CNT (read-write) $" TIM1_CNT @ hex. TIM1_CNT TIM1_CNT 1b. ;
: TIM1_PSC. ." TIM1_PSC (read-write) $" TIM1_PSC @ hex. TIM1_PSC TIM1_PSC 1b. ;
: TIM1_ARR. ." TIM1_ARR (read-write) $" TIM1_ARR @ hex. TIM1_ARR TIM1_ARR 1b. ;
: TIM1_RCR. ." TIM1_RCR (read-write) $" TIM1_RCR @ hex. TIM1_RCR TIM1_RCR 1b. ;
: TIM1_CCR1. ." TIM1_CCR1 (read-write) $" TIM1_CCR1 @ hex. TIM1_CCR1 TIM1_CCR1 1b. ;
: TIM1_CCR2. ." TIM1_CCR2 (read-write) $" TIM1_CCR2 @ hex. TIM1_CCR2 TIM1_CCR2 1b. ;
: TIM1_CCR3. ." TIM1_CCR3 (read-write) $" TIM1_CCR3 @ hex. TIM1_CCR3 TIM1_CCR3 1b. ;
: TIM1_CCR4. ." TIM1_CCR4 (read-write) $" TIM1_CCR4 @ hex. TIM1_CCR4 TIM1_CCR4 1b. ;
: TIM1_BDTR. ." TIM1_BDTR (read-write) $" TIM1_BDTR @ hex. TIM1_BDTR TIM1_BDTR 1b. ;
: TIM1_DCR. ." TIM1_DCR (read-write) $" TIM1_DCR @ hex. TIM1_DCR TIM1_DCR 1b. ;
: TIM1_DMAR. ." TIM1_DMAR (read-write) $" TIM1_DMAR @ hex. TIM1_DMAR TIM1_DMAR 1b. ;
: TIM1.
TIM1_CR1.
TIM1_CR2.
TIM1_SMCR.
TIM1_DIER.
TIM1_SR.
TIM1_EGR.
TIM1_CCMR1_Output.
TIM1_CCMR1_Input.
TIM1_CCMR2_Output.
TIM1_CCMR2_Input.
TIM1_CCER.
TIM1_CNT.
TIM1_PSC.
TIM1_ARR.
TIM1_RCR.
TIM1_CCR1.
TIM1_CCR2.
TIM1_CCR3.
TIM1_CCR4.
TIM1_BDTR.
TIM1_DCR.
TIM1_DMAR.
;

$40000000 constant TIM2
TIM2 $0 +  constant  TIM2_CR1
TIM2 $4 +  constant  TIM2_CR2
TIM2 $8 +  constant  TIM2_SMCR
TIM2 $C +  constant  TIM2_DIER
TIM2 $10 +  constant  TIM2_SR
TIM2 $14 +  constant  TIM2_EGR
TIM2 $18 +  constant  TIM2_CCMR1_Output
TIM2 $18 +  constant  TIM2_CCMR1_Input
TIM2 $1C +  constant  TIM2_CCMR2_Output
TIM2 $1C +  constant  TIM2_CCMR2_Input
TIM2 $20 +  constant  TIM2_CCER
TIM2 $24 +  constant  TIM2_CNT
TIM2 $28 +  constant  TIM2_PSC
TIM2 $2C +  constant  TIM2_ARR
TIM2 $34 +  constant  TIM2_CCR1
TIM2 $38 +  constant  TIM2_CCR2
TIM2 $3C +  constant  TIM2_CCR3
TIM2 $40 +  constant  TIM2_CCR4
TIM2 $48 +  constant  TIM2_DCR
TIM2 $4C +  constant  TIM2_DMAR
: TIM2_CR1. ." TIM2_CR1 (read-write) $" TIM2_CR1 @ hex. TIM2_CR1 TIM2_CR1 1b. ;
: TIM2_CR2. ." TIM2_CR2 (read-write) $" TIM2_CR2 @ hex. TIM2_CR2 TIM2_CR2 1b. ;
: TIM2_SMCR. ." TIM2_SMCR (read-write) $" TIM2_SMCR @ hex. TIM2_SMCR TIM2_SMCR 1b. ;
: TIM2_DIER. ." TIM2_DIER (read-write) $" TIM2_DIER @ hex. TIM2_DIER TIM2_DIER 1b. ;
: TIM2_SR. ." TIM2_SR (read-write) $" TIM2_SR @ hex. TIM2_SR TIM2_SR 1b. ;
: TIM2_EGR. ." TIM2_EGR (write-only) $" TIM2_EGR @ hex. TIM2_EGR TIM2_EGR 1b. ;
: TIM2_CCMR1_Output. ." TIM2_CCMR1_Output (read-write) $" TIM2_CCMR1_Output @ hex. TIM2_CCMR1_Output TIM2_CCMR1_Output 1b. ;
: TIM2_CCMR1_Input. ." TIM2_CCMR1_Input (read-write) $" TIM2_CCMR1_Input @ hex. TIM2_CCMR1_Input TIM2_CCMR1_Input 1b. ;
: TIM2_CCMR2_Output. ." TIM2_CCMR2_Output (read-write) $" TIM2_CCMR2_Output @ hex. TIM2_CCMR2_Output TIM2_CCMR2_Output 1b. ;
: TIM2_CCMR2_Input. ." TIM2_CCMR2_Input (read-write) $" TIM2_CCMR2_Input @ hex. TIM2_CCMR2_Input TIM2_CCMR2_Input 1b. ;
: TIM2_CCER. ." TIM2_CCER (read-write) $" TIM2_CCER @ hex. TIM2_CCER TIM2_CCER 1b. ;
: TIM2_CNT. ." TIM2_CNT (read-write) $" TIM2_CNT @ hex. TIM2_CNT TIM2_CNT 1b. ;
: TIM2_PSC. ." TIM2_PSC (read-write) $" TIM2_PSC @ hex. TIM2_PSC TIM2_PSC 1b. ;
: TIM2_ARR. ." TIM2_ARR (read-write) $" TIM2_ARR @ hex. TIM2_ARR TIM2_ARR 1b. ;
: TIM2_CCR1. ." TIM2_CCR1 (read-write) $" TIM2_CCR1 @ hex. TIM2_CCR1 TIM2_CCR1 1b. ;
: TIM2_CCR2. ." TIM2_CCR2 (read-write) $" TIM2_CCR2 @ hex. TIM2_CCR2 TIM2_CCR2 1b. ;
: TIM2_CCR3. ." TIM2_CCR3 (read-write) $" TIM2_CCR3 @ hex. TIM2_CCR3 TIM2_CCR3 1b. ;
: TIM2_CCR4. ." TIM2_CCR4 (read-write) $" TIM2_CCR4 @ hex. TIM2_CCR4 TIM2_CCR4 1b. ;
: TIM2_DCR. ." TIM2_DCR (read-write) $" TIM2_DCR @ hex. TIM2_DCR TIM2_DCR 1b. ;
: TIM2_DMAR. ." TIM2_DMAR (read-write) $" TIM2_DMAR @ hex. TIM2_DMAR TIM2_DMAR 1b. ;
: TIM2.
TIM2_CR1.
TIM2_CR2.
TIM2_SMCR.
TIM2_DIER.
TIM2_SR.
TIM2_EGR.
TIM2_CCMR1_Output.
TIM2_CCMR1_Input.
TIM2_CCMR2_Output.
TIM2_CCMR2_Input.
TIM2_CCER.
TIM2_CNT.
TIM2_PSC.
TIM2_ARR.
TIM2_CCR1.
TIM2_CCR2.
TIM2_CCR3.
TIM2_CCR4.
TIM2_DCR.
TIM2_DMAR.
;

$40000400 constant TIM3
TIM3 $0 +  constant  TIM3_CR1
TIM3 $4 +  constant  TIM3_CR2
TIM3 $8 +  constant  TIM3_SMCR
TIM3 $C +  constant  TIM3_DIER
TIM3 $10 +  constant  TIM3_SR
TIM3 $14 +  constant  TIM3_EGR
TIM3 $18 +  constant  TIM3_CCMR1_Output
TIM3 $18 +  constant  TIM3_CCMR1_Input
TIM3 $1C +  constant  TIM3_CCMR2_Output
TIM3 $1C +  constant  TIM3_CCMR2_Input
TIM3 $20 +  constant  TIM3_CCER
TIM3 $24 +  constant  TIM3_CNT
TIM3 $28 +  constant  TIM3_PSC
TIM3 $2C +  constant  TIM3_ARR
TIM3 $34 +  constant  TIM3_CCR1
TIM3 $38 +  constant  TIM3_CCR2
TIM3 $3C +  constant  TIM3_CCR3
TIM3 $40 +  constant  TIM3_CCR4
TIM3 $48 +  constant  TIM3_DCR
TIM3 $4C +  constant  TIM3_DMAR
: TIM3_CR1. ." TIM3_CR1 (read-write) $" TIM3_CR1 @ hex. TIM3_CR1 TIM3_CR1 1b. ;
: TIM3_CR2. ." TIM3_CR2 (read-write) $" TIM3_CR2 @ hex. TIM3_CR2 TIM3_CR2 1b. ;
: TIM3_SMCR. ." TIM3_SMCR (read-write) $" TIM3_SMCR @ hex. TIM3_SMCR TIM3_SMCR 1b. ;
: TIM3_DIER. ." TIM3_DIER (read-write) $" TIM3_DIER @ hex. TIM3_DIER TIM3_DIER 1b. ;
: TIM3_SR. ." TIM3_SR (read-write) $" TIM3_SR @ hex. TIM3_SR TIM3_SR 1b. ;
: TIM3_EGR. ." TIM3_EGR (write-only) $" TIM3_EGR @ hex. TIM3_EGR TIM3_EGR 1b. ;
: TIM3_CCMR1_Output. ." TIM3_CCMR1_Output (read-write) $" TIM3_CCMR1_Output @ hex. TIM3_CCMR1_Output TIM3_CCMR1_Output 1b. ;
: TIM3_CCMR1_Input. ." TIM3_CCMR1_Input (read-write) $" TIM3_CCMR1_Input @ hex. TIM3_CCMR1_Input TIM3_CCMR1_Input 1b. ;
: TIM3_CCMR2_Output. ." TIM3_CCMR2_Output (read-write) $" TIM3_CCMR2_Output @ hex. TIM3_CCMR2_Output TIM3_CCMR2_Output 1b. ;
: TIM3_CCMR2_Input. ." TIM3_CCMR2_Input (read-write) $" TIM3_CCMR2_Input @ hex. TIM3_CCMR2_Input TIM3_CCMR2_Input 1b. ;
: TIM3_CCER. ." TIM3_CCER (read-write) $" TIM3_CCER @ hex. TIM3_CCER TIM3_CCER 1b. ;
: TIM3_CNT. ." TIM3_CNT (read-write) $" TIM3_CNT @ hex. TIM3_CNT TIM3_CNT 1b. ;
: TIM3_PSC. ." TIM3_PSC (read-write) $" TIM3_PSC @ hex. TIM3_PSC TIM3_PSC 1b. ;
: TIM3_ARR. ." TIM3_ARR (read-write) $" TIM3_ARR @ hex. TIM3_ARR TIM3_ARR 1b. ;
: TIM3_CCR1. ." TIM3_CCR1 (read-write) $" TIM3_CCR1 @ hex. TIM3_CCR1 TIM3_CCR1 1b. ;
: TIM3_CCR2. ." TIM3_CCR2 (read-write) $" TIM3_CCR2 @ hex. TIM3_CCR2 TIM3_CCR2 1b. ;
: TIM3_CCR3. ." TIM3_CCR3 (read-write) $" TIM3_CCR3 @ hex. TIM3_CCR3 TIM3_CCR3 1b. ;
: TIM3_CCR4. ." TIM3_CCR4 (read-write) $" TIM3_CCR4 @ hex. TIM3_CCR4 TIM3_CCR4 1b. ;
: TIM3_DCR. ." TIM3_DCR (read-write) $" TIM3_DCR @ hex. TIM3_DCR TIM3_DCR 1b. ;
: TIM3_DMAR. ." TIM3_DMAR (read-write) $" TIM3_DMAR @ hex. TIM3_DMAR TIM3_DMAR 1b. ;
: TIM3.
TIM3_CR1.
TIM3_CR2.
TIM3_SMCR.
TIM3_DIER.
TIM3_SR.
TIM3_EGR.
TIM3_CCMR1_Output.
TIM3_CCMR1_Input.
TIM3_CCMR2_Output.
TIM3_CCMR2_Input.
TIM3_CCER.
TIM3_CNT.
TIM3_PSC.
TIM3_ARR.
TIM3_CCR1.
TIM3_CCR2.
TIM3_CCR3.
TIM3_CCR4.
TIM3_DCR.
TIM3_DMAR.
;

$40002000 constant TIM14
TIM14 $0 +  constant  TIM14_CR1
TIM14 $C +  constant  TIM14_DIER
TIM14 $10 +  constant  TIM14_SR
TIM14 $14 +  constant  TIM14_EGR
TIM14 $18 +  constant  TIM14_CCMR1_Output
TIM14 $18 +  constant  TIM14_CCMR1_Input
TIM14 $20 +  constant  TIM14_CCER
TIM14 $24 +  constant  TIM14_CNT
TIM14 $28 +  constant  TIM14_PSC
TIM14 $2C +  constant  TIM14_ARR
TIM14 $34 +  constant  TIM14_CCR1
TIM14 $50 +  constant  TIM14_OR
: TIM14_CR1. ." TIM14_CR1 (read-write) $" TIM14_CR1 @ hex. TIM14_CR1 TIM14_CR1 1b. ;
: TIM14_DIER. ." TIM14_DIER (read-write) $" TIM14_DIER @ hex. TIM14_DIER TIM14_DIER 1b. ;
: TIM14_SR. ." TIM14_SR (read-write) $" TIM14_SR @ hex. TIM14_SR TIM14_SR 1b. ;
: TIM14_EGR. ." TIM14_EGR (write-only) $" TIM14_EGR @ hex. TIM14_EGR TIM14_EGR 1b. ;
: TIM14_CCMR1_Output. ." TIM14_CCMR1_Output (read-write) $" TIM14_CCMR1_Output @ hex. TIM14_CCMR1_Output TIM14_CCMR1_Output 1b. ;
: TIM14_CCMR1_Input. ." TIM14_CCMR1_Input (read-write) $" TIM14_CCMR1_Input @ hex. TIM14_CCMR1_Input TIM14_CCMR1_Input 1b. ;
: TIM14_CCER. ." TIM14_CCER (read-write) $" TIM14_CCER @ hex. TIM14_CCER TIM14_CCER 1b. ;
: TIM14_CNT. ." TIM14_CNT (read-write) $" TIM14_CNT @ hex. TIM14_CNT TIM14_CNT 1b. ;
: TIM14_PSC. ." TIM14_PSC (read-write) $" TIM14_PSC @ hex. TIM14_PSC TIM14_PSC 1b. ;
: TIM14_ARR. ." TIM14_ARR (read-write) $" TIM14_ARR @ hex. TIM14_ARR TIM14_ARR 1b. ;
: TIM14_CCR1. ." TIM14_CCR1 (read-write) $" TIM14_CCR1 @ hex. TIM14_CCR1 TIM14_CCR1 1b. ;
: TIM14_OR. ." TIM14_OR (read-write) $" TIM14_OR @ hex. TIM14_OR TIM14_OR 1b. ;
: TIM14.
TIM14_CR1.
TIM14_DIER.
TIM14_SR.
TIM14_EGR.
TIM14_CCMR1_Output.
TIM14_CCMR1_Input.
TIM14_CCER.
TIM14_CNT.
TIM14_PSC.
TIM14_ARR.
TIM14_CCR1.
TIM14_OR.
;

$40001000 constant TIM6
TIM6 $0 +  constant  TIM6_CR1
TIM6 $4 +  constant  TIM6_CR2
TIM6 $C +  constant  TIM6_DIER
TIM6 $10 +  constant  TIM6_SR
TIM6 $14 +  constant  TIM6_EGR
TIM6 $24 +  constant  TIM6_CNT
TIM6 $28 +  constant  TIM6_PSC
TIM6 $2C +  constant  TIM6_ARR
: TIM6_CR1. ." TIM6_CR1 (read-write) $" TIM6_CR1 @ hex. TIM6_CR1 TIM6_CR1 1b. ;
: TIM6_CR2. ." TIM6_CR2 (read-write) $" TIM6_CR2 @ hex. TIM6_CR2 TIM6_CR2 1b. ;
: TIM6_DIER. ." TIM6_DIER (read-write) $" TIM6_DIER @ hex. TIM6_DIER TIM6_DIER 1b. ;
: TIM6_SR. ." TIM6_SR (read-write) $" TIM6_SR @ hex. TIM6_SR TIM6_SR 1b. ;
: TIM6_EGR. ." TIM6_EGR (write-only) $" TIM6_EGR @ hex. TIM6_EGR TIM6_EGR 1b. ;
: TIM6_CNT. ." TIM6_CNT (read-write) $" TIM6_CNT @ hex. TIM6_CNT TIM6_CNT 1b. ;
: TIM6_PSC. ." TIM6_PSC (read-write) $" TIM6_PSC @ hex. TIM6_PSC TIM6_PSC 1b. ;
: TIM6_ARR. ." TIM6_ARR (read-write) $" TIM6_ARR @ hex. TIM6_ARR TIM6_ARR 1b. ;
: TIM6.
TIM6_CR1.
TIM6_CR2.
TIM6_DIER.
TIM6_SR.
TIM6_EGR.
TIM6_CNT.
TIM6_PSC.
TIM6_ARR.
;

$40001400 constant TIM7
TIM7 $0 +  constant  TIM7_CR1
TIM7 $4 +  constant  TIM7_CR2
TIM7 $C +  constant  TIM7_DIER
TIM7 $10 +  constant  TIM7_SR
TIM7 $14 +  constant  TIM7_EGR
TIM7 $24 +  constant  TIM7_CNT
TIM7 $28 +  constant  TIM7_PSC
TIM7 $2C +  constant  TIM7_ARR
: TIM7_CR1. ." TIM7_CR1 (read-write) $" TIM7_CR1 @ hex. TIM7_CR1 TIM7_CR1 1b. ;
: TIM7_CR2. ." TIM7_CR2 (read-write) $" TIM7_CR2 @ hex. TIM7_CR2 TIM7_CR2 1b. ;
: TIM7_DIER. ." TIM7_DIER (read-write) $" TIM7_DIER @ hex. TIM7_DIER TIM7_DIER 1b. ;
: TIM7_SR. ." TIM7_SR (read-write) $" TIM7_SR @ hex. TIM7_SR TIM7_SR 1b. ;
: TIM7_EGR. ." TIM7_EGR (write-only) $" TIM7_EGR @ hex. TIM7_EGR TIM7_EGR 1b. ;
: TIM7_CNT. ." TIM7_CNT (read-write) $" TIM7_CNT @ hex. TIM7_CNT TIM7_CNT 1b. ;
: TIM7_PSC. ." TIM7_PSC (read-write) $" TIM7_PSC @ hex. TIM7_PSC TIM7_PSC 1b. ;
: TIM7_ARR. ." TIM7_ARR (read-write) $" TIM7_ARR @ hex. TIM7_ARR TIM7_ARR 1b. ;
: TIM7.
TIM7_CR1.
TIM7_CR2.
TIM7_DIER.
TIM7_SR.
TIM7_EGR.
TIM7_CNT.
TIM7_PSC.
TIM7_ARR.
;

$40010400 constant EXTI
EXTI $0 +  constant  EXTI_IMR
EXTI $4 +  constant  EXTI_EMR
EXTI $8 +  constant  EXTI_RTSR
EXTI $C +  constant  EXTI_FTSR
EXTI $10 +  constant  EXTI_SWIER
EXTI $14 +  constant  EXTI_PR
: EXTI_IMR. ." EXTI_IMR (read-write) $" EXTI_IMR @ hex. EXTI_IMR EXTI_IMR 1b. ;
: EXTI_EMR. ." EXTI_EMR (read-write) $" EXTI_EMR @ hex. EXTI_EMR EXTI_EMR 1b. ;
: EXTI_RTSR. ." EXTI_RTSR (read-write) $" EXTI_RTSR @ hex. EXTI_RTSR EXTI_RTSR 1b. ;
: EXTI_FTSR. ." EXTI_FTSR (read-write) $" EXTI_FTSR @ hex. EXTI_FTSR EXTI_FTSR 1b. ;
: EXTI_SWIER. ." EXTI_SWIER (read-write) $" EXTI_SWIER @ hex. EXTI_SWIER EXTI_SWIER 1b. ;
: EXTI_PR. ." EXTI_PR (read-write) $" EXTI_PR @ hex. EXTI_PR EXTI_PR 1b. ;
: EXTI.
EXTI_IMR.
EXTI_EMR.
EXTI_RTSR.
EXTI_FTSR.
EXTI_SWIER.
EXTI_PR.
;

$E000E100 constant NVIC
NVIC $0 +  constant  NVIC_ISER
NVIC $80 +  constant  NVIC_ICER
NVIC $100 +  constant  NVIC_ISPR
NVIC $180 +  constant  NVIC_ICPR
NVIC $300 +  constant  NVIC_IPR0
NVIC $304 +  constant  NVIC_IPR1
NVIC $308 +  constant  NVIC_IPR2
NVIC $30C +  constant  NVIC_IPR3
NVIC $310 +  constant  NVIC_IPR4
NVIC $314 +  constant  NVIC_IPR5
NVIC $318 +  constant  NVIC_IPR6
NVIC $31C +  constant  NVIC_IPR7
: NVIC_ISER. ." NVIC_ISER (read-write) $" NVIC_ISER @ hex. NVIC_ISER NVIC_ISER 1b. ;
: NVIC_ICER. ." NVIC_ICER (read-write) $" NVIC_ICER @ hex. NVIC_ICER NVIC_ICER 1b. ;
: NVIC_ISPR. ." NVIC_ISPR (read-write) $" NVIC_ISPR @ hex. NVIC_ISPR NVIC_ISPR 1b. ;
: NVIC_ICPR. ." NVIC_ICPR (read-write) $" NVIC_ICPR @ hex. NVIC_ICPR NVIC_ICPR 1b. ;
: NVIC_IPR0. ." NVIC_IPR0 (read-write) $" NVIC_IPR0 @ hex. NVIC_IPR0 NVIC_IPR0 1b. ;
: NVIC_IPR1. ." NVIC_IPR1 (read-write) $" NVIC_IPR1 @ hex. NVIC_IPR1 NVIC_IPR1 1b. ;
: NVIC_IPR2. ." NVIC_IPR2 (read-write) $" NVIC_IPR2 @ hex. NVIC_IPR2 NVIC_IPR2 1b. ;
: NVIC_IPR3. ." NVIC_IPR3 (read-write) $" NVIC_IPR3 @ hex. NVIC_IPR3 NVIC_IPR3 1b. ;
: NVIC_IPR4. ." NVIC_IPR4 (read-write) $" NVIC_IPR4 @ hex. NVIC_IPR4 NVIC_IPR4 1b. ;
: NVIC_IPR5. ." NVIC_IPR5 (read-write) $" NVIC_IPR5 @ hex. NVIC_IPR5 NVIC_IPR5 1b. ;
: NVIC_IPR6. ." NVIC_IPR6 (read-write) $" NVIC_IPR6 @ hex. NVIC_IPR6 NVIC_IPR6 1b. ;
: NVIC_IPR7. ." NVIC_IPR7 (read-write) $" NVIC_IPR7 @ hex. NVIC_IPR7 NVIC_IPR7 1b. ;
: NVIC.
NVIC_ISER.
NVIC_ICER.
NVIC_ISPR.
NVIC_ICPR.
NVIC_IPR0.
NVIC_IPR1.
NVIC_IPR2.
NVIC_IPR3.
NVIC_IPR4.
NVIC_IPR5.
NVIC_IPR6.
NVIC_IPR7.
;

$40020000 constant DMA
DMA $0 +  constant  DMA_ISR
DMA $4 +  constant  DMA_IFCR
DMA $8 +  constant  DMA_CCR1
DMA $C +  constant  DMA_CNDTR1
DMA $10 +  constant  DMA_CPAR1
DMA $14 +  constant  DMA_CMAR1
DMA $1C +  constant  DMA_CCR2
DMA $20 +  constant  DMA_CNDTR2
DMA $24 +  constant  DMA_CPAR2
DMA $28 +  constant  DMA_CMAR2
DMA $30 +  constant  DMA_CCR3
DMA $34 +  constant  DMA_CNDTR3
DMA $38 +  constant  DMA_CPAR3
DMA $3C +  constant  DMA_CMAR3
DMA $44 +  constant  DMA_CCR4
DMA $48 +  constant  DMA_CNDTR4
DMA $4C +  constant  DMA_CPAR4
DMA $50 +  constant  DMA_CMAR4
DMA $58 +  constant  DMA_CCR5
DMA $5C +  constant  DMA_CNDTR5
DMA $60 +  constant  DMA_CPAR5
DMA $64 +  constant  DMA_CMAR5
DMA $6C +  constant  DMA_CCR6
DMA $70 +  constant  DMA_CNDTR6
DMA $74 +  constant  DMA_CPAR6
DMA $78 +  constant  DMA_CMAR6
DMA $80 +  constant  DMA_CCR7
DMA $84 +  constant  DMA_CNDTR7
DMA $88 +  constant  DMA_CPAR7
DMA $8C +  constant  DMA_CMAR7
: DMA_ISR. ." DMA_ISR (read-only) $" DMA_ISR @ hex. DMA_ISR DMA_ISR 1b. ;
: DMA_IFCR. ." DMA_IFCR (write-only) $" DMA_IFCR @ hex. DMA_IFCR DMA_IFCR 1b. ;
: DMA_CCR1. ." DMA_CCR1 (read-write) $" DMA_CCR1 @ hex. DMA_CCR1 DMA_CCR1 1b. ;
: DMA_CNDTR1. ." DMA_CNDTR1 (read-write) $" DMA_CNDTR1 @ hex. DMA_CNDTR1 DMA_CNDTR1 1b. ;
: DMA_CPAR1. ." DMA_CPAR1 (read-write) $" DMA_CPAR1 @ hex. DMA_CPAR1 DMA_CPAR1 1b. ;
: DMA_CMAR1. ." DMA_CMAR1 (read-write) $" DMA_CMAR1 @ hex. DMA_CMAR1 DMA_CMAR1 1b. ;
: DMA_CCR2. ." DMA_CCR2 (read-write) $" DMA_CCR2 @ hex. DMA_CCR2 DMA_CCR2 1b. ;
: DMA_CNDTR2. ." DMA_CNDTR2 (read-write) $" DMA_CNDTR2 @ hex. DMA_CNDTR2 DMA_CNDTR2 1b. ;
: DMA_CPAR2. ." DMA_CPAR2 (read-write) $" DMA_CPAR2 @ hex. DMA_CPAR2 DMA_CPAR2 1b. ;
: DMA_CMAR2. ." DMA_CMAR2 (read-write) $" DMA_CMAR2 @ hex. DMA_CMAR2 DMA_CMAR2 1b. ;
: DMA_CCR3. ." DMA_CCR3 (read-write) $" DMA_CCR3 @ hex. DMA_CCR3 DMA_CCR3 1b. ;
: DMA_CNDTR3. ." DMA_CNDTR3 (read-write) $" DMA_CNDTR3 @ hex. DMA_CNDTR3 DMA_CNDTR3 1b. ;
: DMA_CPAR3. ." DMA_CPAR3 (read-write) $" DMA_CPAR3 @ hex. DMA_CPAR3 DMA_CPAR3 1b. ;
: DMA_CMAR3. ." DMA_CMAR3 (read-write) $" DMA_CMAR3 @ hex. DMA_CMAR3 DMA_CMAR3 1b. ;
: DMA_CCR4. ." DMA_CCR4 (read-write) $" DMA_CCR4 @ hex. DMA_CCR4 DMA_CCR4 1b. ;
: DMA_CNDTR4. ." DMA_CNDTR4 (read-write) $" DMA_CNDTR4 @ hex. DMA_CNDTR4 DMA_CNDTR4 1b. ;
: DMA_CPAR4. ." DMA_CPAR4 (read-write) $" DMA_CPAR4 @ hex. DMA_CPAR4 DMA_CPAR4 1b. ;
: DMA_CMAR4. ." DMA_CMAR4 (read-write) $" DMA_CMAR4 @ hex. DMA_CMAR4 DMA_CMAR4 1b. ;
: DMA_CCR5. ." DMA_CCR5 (read-write) $" DMA_CCR5 @ hex. DMA_CCR5 DMA_CCR5 1b. ;
: DMA_CNDTR5. ." DMA_CNDTR5 (read-write) $" DMA_CNDTR5 @ hex. DMA_CNDTR5 DMA_CNDTR5 1b. ;
: DMA_CPAR5. ." DMA_CPAR5 (read-write) $" DMA_CPAR5 @ hex. DMA_CPAR5 DMA_CPAR5 1b. ;
: DMA_CMAR5. ." DMA_CMAR5 (read-write) $" DMA_CMAR5 @ hex. DMA_CMAR5 DMA_CMAR5 1b. ;
: DMA_CCR6. ." DMA_CCR6 (read-write) $" DMA_CCR6 @ hex. DMA_CCR6 DMA_CCR6 1b. ;
: DMA_CNDTR6. ." DMA_CNDTR6 (read-write) $" DMA_CNDTR6 @ hex. DMA_CNDTR6 DMA_CNDTR6 1b. ;
: DMA_CPAR6. ." DMA_CPAR6 (read-write) $" DMA_CPAR6 @ hex. DMA_CPAR6 DMA_CPAR6 1b. ;
: DMA_CMAR6. ." DMA_CMAR6 (read-write) $" DMA_CMAR6 @ hex. DMA_CMAR6 DMA_CMAR6 1b. ;
: DMA_CCR7. ." DMA_CCR7 (read-write) $" DMA_CCR7 @ hex. DMA_CCR7 DMA_CCR7 1b. ;
: DMA_CNDTR7. ." DMA_CNDTR7 (read-write) $" DMA_CNDTR7 @ hex. DMA_CNDTR7 DMA_CNDTR7 1b. ;
: DMA_CPAR7. ." DMA_CPAR7 (read-write) $" DMA_CPAR7 @ hex. DMA_CPAR7 DMA_CPAR7 1b. ;
: DMA_CMAR7. ." DMA_CMAR7 (read-write) $" DMA_CMAR7 @ hex. DMA_CMAR7 DMA_CMAR7 1b. ;
: DMA.
DMA_ISR.
DMA_IFCR.
DMA_CCR1.
DMA_CNDTR1.
DMA_CPAR1.
DMA_CMAR1.
DMA_CCR2.
DMA_CNDTR2.
DMA_CPAR2.
DMA_CMAR2.
DMA_CCR3.
DMA_CNDTR3.
DMA_CPAR3.
DMA_CMAR3.
DMA_CCR4.
DMA_CNDTR4.
DMA_CPAR4.
DMA_CMAR4.
DMA_CCR5.
DMA_CNDTR5.
DMA_CPAR5.
DMA_CMAR5.
DMA_CCR6.
DMA_CNDTR6.
DMA_CPAR6.
DMA_CMAR6.
DMA_CCR7.
DMA_CNDTR7.
DMA_CPAR7.
DMA_CMAR7.
;

$40021000 constant RCC
RCC $0 +  constant  RCC_CR
RCC $4 +  constant  RCC_CFGR
RCC $8 +  constant  RCC_CIR
RCC $C +  constant  RCC_APB2RSTR
RCC $10 +  constant  RCC_APB1RSTR
RCC $14 +  constant  RCC_AHBENR
RCC $18 +  constant  RCC_APB2ENR
RCC $1C +  constant  RCC_APB1ENR
RCC $20 +  constant  RCC_BDCR
RCC $24 +  constant  RCC_CSR
RCC $28 +  constant  RCC_AHBRSTR
RCC $2C +  constant  RCC_CFGR2
RCC $30 +  constant  RCC_CFGR3
RCC $34 +  constant  RCC_CR2
: RCC_CR. ." RCC_CR () $" RCC_CR @ hex. RCC_CR RCC_CR 1b. ;
: RCC_CFGR. ." RCC_CFGR () $" RCC_CFGR @ hex. RCC_CFGR RCC_CFGR 1b. ;
: RCC_CIR. ." RCC_CIR () $" RCC_CIR @ hex. RCC_CIR RCC_CIR 1b. ;
: RCC_APB2RSTR. ." RCC_APB2RSTR (read-write) $" RCC_APB2RSTR @ hex. RCC_APB2RSTR RCC_APB2RSTR 1b. ;
: RCC_APB1RSTR. ." RCC_APB1RSTR (read-write) $" RCC_APB1RSTR @ hex. RCC_APB1RSTR RCC_APB1RSTR 1b. ;
: RCC_AHBENR. ." RCC_AHBENR (read-write) $" RCC_AHBENR @ hex. RCC_AHBENR RCC_AHBENR 1b. ;
: RCC_APB2ENR. ." RCC_APB2ENR (read-write) $" RCC_APB2ENR @ hex. RCC_APB2ENR RCC_APB2ENR 1b. ;
: RCC_APB1ENR. ." RCC_APB1ENR (read-write) $" RCC_APB1ENR @ hex. RCC_APB1ENR RCC_APB1ENR 1b. ;
: RCC_BDCR. ." RCC_BDCR () $" RCC_BDCR @ hex. RCC_BDCR RCC_BDCR 1b. ;
: RCC_CSR. ." RCC_CSR () $" RCC_CSR @ hex. RCC_CSR RCC_CSR 1b. ;
: RCC_AHBRSTR. ." RCC_AHBRSTR (read-write) $" RCC_AHBRSTR @ hex. RCC_AHBRSTR RCC_AHBRSTR 1b. ;
: RCC_CFGR2. ." RCC_CFGR2 (read-write) $" RCC_CFGR2 @ hex. RCC_CFGR2 RCC_CFGR2 1b. ;
: RCC_CFGR3. ." RCC_CFGR3 (read-write) $" RCC_CFGR3 @ hex. RCC_CFGR3 RCC_CFGR3 1b. ;
: RCC_CR2. ." RCC_CR2 () $" RCC_CR2 @ hex. RCC_CR2 RCC_CR2 1b. ;
: RCC.
RCC_CR.
RCC_CFGR.
RCC_CIR.
RCC_APB2RSTR.
RCC_APB1RSTR.
RCC_AHBENR.
RCC_APB2ENR.
RCC_APB1ENR.
RCC_BDCR.
RCC_CSR.
RCC_AHBRSTR.
RCC_CFGR2.
RCC_CFGR3.
RCC_CR2.
;

$40010000 constant SYSCFG
SYSCFG $0 +  constant  SYSCFG_CFGR1
SYSCFG $8 +  constant  SYSCFG_EXTICR1
SYSCFG $C +  constant  SYSCFG_EXTICR2
SYSCFG $10 +  constant  SYSCFG_EXTICR3
SYSCFG $14 +  constant  SYSCFG_EXTICR4
SYSCFG $18 +  constant  SYSCFG_CFGR2
: SYSCFG_CFGR1. ." SYSCFG_CFGR1 (read-write) $" SYSCFG_CFGR1 @ hex. SYSCFG_CFGR1 SYSCFG_CFGR1 1b. ;
: SYSCFG_EXTICR1. ." SYSCFG_EXTICR1 (read-write) $" SYSCFG_EXTICR1 @ hex. SYSCFG_EXTICR1 SYSCFG_EXTICR1 1b. ;
: SYSCFG_EXTICR2. ." SYSCFG_EXTICR2 (read-write) $" SYSCFG_EXTICR2 @ hex. SYSCFG_EXTICR2 SYSCFG_EXTICR2 1b. ;
: SYSCFG_EXTICR3. ." SYSCFG_EXTICR3 (read-write) $" SYSCFG_EXTICR3 @ hex. SYSCFG_EXTICR3 SYSCFG_EXTICR3 1b. ;
: SYSCFG_EXTICR4. ." SYSCFG_EXTICR4 (read-write) $" SYSCFG_EXTICR4 @ hex. SYSCFG_EXTICR4 SYSCFG_EXTICR4 1b. ;
: SYSCFG_CFGR2. ." SYSCFG_CFGR2 (read-write) $" SYSCFG_CFGR2 @ hex. SYSCFG_CFGR2 SYSCFG_CFGR2 1b. ;
: SYSCFG.
SYSCFG_CFGR1.
SYSCFG_EXTICR1.
SYSCFG_EXTICR2.
SYSCFG_EXTICR3.
SYSCFG_EXTICR4.
SYSCFG_CFGR2.
;

$40012400 constant ADC
ADC $0 +  constant  ADC_ISR
ADC $4 +  constant  ADC_IER
ADC $8 +  constant  ADC_CR
ADC $C +  constant  ADC_CFGR1
ADC $10 +  constant  ADC_CFGR2
ADC $14 +  constant  ADC_SMPR
ADC $20 +  constant  ADC_TR
ADC $28 +  constant  ADC_CHSELR
ADC $40 +  constant  ADC_DR
ADC $308 +  constant  ADC_CCR
: ADC_ISR. ." ADC_ISR (read-write) $" ADC_ISR @ hex. ADC_ISR ADC_ISR 1b. ;
: ADC_IER. ." ADC_IER (read-write) $" ADC_IER @ hex. ADC_IER ADC_IER 1b. ;
: ADC_CR. ." ADC_CR (read-write) $" ADC_CR @ hex. ADC_CR ADC_CR 1b. ;
: ADC_CFGR1. ." ADC_CFGR1 (read-write) $" ADC_CFGR1 @ hex. ADC_CFGR1 ADC_CFGR1 1b. ;
: ADC_CFGR2. ." ADC_CFGR2 (read-write) $" ADC_CFGR2 @ hex. ADC_CFGR2 ADC_CFGR2 1b. ;
: ADC_SMPR. ." ADC_SMPR (read-write) $" ADC_SMPR @ hex. ADC_SMPR ADC_SMPR 1b. ;
: ADC_TR. ." ADC_TR (read-write) $" ADC_TR @ hex. ADC_TR ADC_TR 1b. ;
: ADC_CHSELR. ." ADC_CHSELR (read-write) $" ADC_CHSELR @ hex. ADC_CHSELR ADC_CHSELR 1b. ;
: ADC_DR. ." ADC_DR (read-only) $" ADC_DR @ hex. ADC_DR ADC_DR 1b. ;
: ADC_CCR. ." ADC_CCR (read-write) $" ADC_CCR @ hex. ADC_CCR ADC_CCR 1b. ;
: ADC.
ADC_ISR.
ADC_IER.
ADC_CR.
ADC_CFGR1.
ADC_CFGR2.
ADC_SMPR.
ADC_TR.
ADC_CHSELR.
ADC_DR.
ADC_CCR.
;

$40013800 constant USART1
USART1 $0 +  constant  USART1_CR1
USART1 $4 +  constant  USART1_CR2
USART1 $8 +  constant  USART1_CR3
USART1 $C +  constant  USART1_BRR
USART1 $10 +  constant  USART1_GTPR
USART1 $14 +  constant  USART1_RTOR
USART1 $18 +  constant  USART1_RQR
USART1 $1C +  constant  USART1_ISR
USART1 $20 +  constant  USART1_ICR
USART1 $24 +  constant  USART1_RDR
USART1 $28 +  constant  USART1_TDR
: USART1_CR1. ." USART1_CR1 (read-write) $" USART1_CR1 @ hex. USART1_CR1 USART1_CR1 1b. ;
: USART1_CR2. ." USART1_CR2 (read-write) $" USART1_CR2 @ hex. USART1_CR2 USART1_CR2 1b. ;
: USART1_CR3. ." USART1_CR3 (read-write) $" USART1_CR3 @ hex. USART1_CR3 USART1_CR3 1b. ;
: USART1_BRR. ." USART1_BRR (read-write) $" USART1_BRR @ hex. USART1_BRR USART1_BRR 1b. ;
: USART1_GTPR. ." USART1_GTPR (read-write) $" USART1_GTPR @ hex. USART1_GTPR USART1_GTPR 1b. ;
: USART1_RTOR. ." USART1_RTOR (read-write) $" USART1_RTOR @ hex. USART1_RTOR USART1_RTOR 1b. ;
: USART1_RQR. ." USART1_RQR (read-write) $" USART1_RQR @ hex. USART1_RQR USART1_RQR 1b. ;
: USART1_ISR. ." USART1_ISR (read-only) $" USART1_ISR @ hex. USART1_ISR USART1_ISR 1b. ;
: USART1_ICR. ." USART1_ICR (read-write) $" USART1_ICR @ hex. USART1_ICR USART1_ICR 1b. ;
: USART1_RDR. ." USART1_RDR (read-only) $" USART1_RDR @ hex. USART1_RDR USART1_RDR 1b. ;
: USART1_TDR. ." USART1_TDR (read-write) $" USART1_TDR @ hex. USART1_TDR USART1_TDR 1b. ;
: USART1.
USART1_CR1.
USART1_CR2.
USART1_CR3.
USART1_BRR.
USART1_GTPR.
USART1_RTOR.
USART1_RQR.
USART1_ISR.
USART1_ICR.
USART1_RDR.
USART1_TDR.
;

$40004400 constant USART2
USART2 $0 +  constant  USART2_CR1
USART2 $4 +  constant  USART2_CR2
USART2 $8 +  constant  USART2_CR3
USART2 $C +  constant  USART2_BRR
USART2 $10 +  constant  USART2_GTPR
USART2 $14 +  constant  USART2_RTOR
USART2 $18 +  constant  USART2_RQR
USART2 $1C +  constant  USART2_ISR
USART2 $20 +  constant  USART2_ICR
USART2 $24 +  constant  USART2_RDR
USART2 $28 +  constant  USART2_TDR
: USART2_CR1. ." USART2_CR1 (read-write) $" USART2_CR1 @ hex. USART2_CR1 USART2_CR1 1b. ;
: USART2_CR2. ." USART2_CR2 (read-write) $" USART2_CR2 @ hex. USART2_CR2 USART2_CR2 1b. ;
: USART2_CR3. ." USART2_CR3 (read-write) $" USART2_CR3 @ hex. USART2_CR3 USART2_CR3 1b. ;
: USART2_BRR. ." USART2_BRR (read-write) $" USART2_BRR @ hex. USART2_BRR USART2_BRR 1b. ;
: USART2_GTPR. ." USART2_GTPR (read-write) $" USART2_GTPR @ hex. USART2_GTPR USART2_GTPR 1b. ;
: USART2_RTOR. ." USART2_RTOR (read-write) $" USART2_RTOR @ hex. USART2_RTOR USART2_RTOR 1b. ;
: USART2_RQR. ." USART2_RQR (read-write) $" USART2_RQR @ hex. USART2_RQR USART2_RQR 1b. ;
: USART2_ISR. ." USART2_ISR (read-only) $" USART2_ISR @ hex. USART2_ISR USART2_ISR 1b. ;
: USART2_ICR. ." USART2_ICR (read-write) $" USART2_ICR @ hex. USART2_ICR USART2_ICR 1b. ;
: USART2_RDR. ." USART2_RDR (read-only) $" USART2_RDR @ hex. USART2_RDR USART2_RDR 1b. ;
: USART2_TDR. ." USART2_TDR (read-write) $" USART2_TDR @ hex. USART2_TDR USART2_TDR 1b. ;
: USART2.
USART2_CR1.
USART2_CR2.
USART2_CR3.
USART2_BRR.
USART2_GTPR.
USART2_RTOR.
USART2_RQR.
USART2_ISR.
USART2_ICR.
USART2_RDR.
USART2_TDR.
;

$40004800 constant USART3
USART3 $0 +  constant  USART3_CR1
USART3 $4 +  constant  USART3_CR2
USART3 $8 +  constant  USART3_CR3
USART3 $C +  constant  USART3_BRR
USART3 $10 +  constant  USART3_GTPR
USART3 $14 +  constant  USART3_RTOR
USART3 $18 +  constant  USART3_RQR
USART3 $1C +  constant  USART3_ISR
USART3 $20 +  constant  USART3_ICR
USART3 $24 +  constant  USART3_RDR
USART3 $28 +  constant  USART3_TDR
: USART3_CR1. ." USART3_CR1 (read-write) $" USART3_CR1 @ hex. USART3_CR1 USART3_CR1 1b. ;
: USART3_CR2. ." USART3_CR2 (read-write) $" USART3_CR2 @ hex. USART3_CR2 USART3_CR2 1b. ;
: USART3_CR3. ." USART3_CR3 (read-write) $" USART3_CR3 @ hex. USART3_CR3 USART3_CR3 1b. ;
: USART3_BRR. ." USART3_BRR (read-write) $" USART3_BRR @ hex. USART3_BRR USART3_BRR 1b. ;
: USART3_GTPR. ." USART3_GTPR (read-write) $" USART3_GTPR @ hex. USART3_GTPR USART3_GTPR 1b. ;
: USART3_RTOR. ." USART3_RTOR (read-write) $" USART3_RTOR @ hex. USART3_RTOR USART3_RTOR 1b. ;
: USART3_RQR. ." USART3_RQR (read-write) $" USART3_RQR @ hex. USART3_RQR USART3_RQR 1b. ;
: USART3_ISR. ." USART3_ISR (read-only) $" USART3_ISR @ hex. USART3_ISR USART3_ISR 1b. ;
: USART3_ICR. ." USART3_ICR (read-write) $" USART3_ICR @ hex. USART3_ICR USART3_ICR 1b. ;
: USART3_RDR. ." USART3_RDR (read-only) $" USART3_RDR @ hex. USART3_RDR USART3_RDR 1b. ;
: USART3_TDR. ." USART3_TDR (read-write) $" USART3_TDR @ hex. USART3_TDR USART3_TDR 1b. ;
: USART3.
USART3_CR1.
USART3_CR2.
USART3_CR3.
USART3_BRR.
USART3_GTPR.
USART3_RTOR.
USART3_RQR.
USART3_ISR.
USART3_ICR.
USART3_RDR.
USART3_TDR.
;

$40004C00 constant USART4
USART4 $0 +  constant  USART4_CR1
USART4 $4 +  constant  USART4_CR2
USART4 $8 +  constant  USART4_CR3
USART4 $C +  constant  USART4_BRR
USART4 $10 +  constant  USART4_GTPR
USART4 $14 +  constant  USART4_RTOR
USART4 $18 +  constant  USART4_RQR
USART4 $1C +  constant  USART4_ISR
USART4 $20 +  constant  USART4_ICR
USART4 $24 +  constant  USART4_RDR
USART4 $28 +  constant  USART4_TDR
: USART4_CR1. ." USART4_CR1 (read-write) $" USART4_CR1 @ hex. USART4_CR1 USART4_CR1 1b. ;
: USART4_CR2. ." USART4_CR2 (read-write) $" USART4_CR2 @ hex. USART4_CR2 USART4_CR2 1b. ;
: USART4_CR3. ." USART4_CR3 (read-write) $" USART4_CR3 @ hex. USART4_CR3 USART4_CR3 1b. ;
: USART4_BRR. ." USART4_BRR (read-write) $" USART4_BRR @ hex. USART4_BRR USART4_BRR 1b. ;
: USART4_GTPR. ." USART4_GTPR (read-write) $" USART4_GTPR @ hex. USART4_GTPR USART4_GTPR 1b. ;
: USART4_RTOR. ." USART4_RTOR (read-write) $" USART4_RTOR @ hex. USART4_RTOR USART4_RTOR 1b. ;
: USART4_RQR. ." USART4_RQR (read-write) $" USART4_RQR @ hex. USART4_RQR USART4_RQR 1b. ;
: USART4_ISR. ." USART4_ISR (read-only) $" USART4_ISR @ hex. USART4_ISR USART4_ISR 1b. ;
: USART4_ICR. ." USART4_ICR (read-write) $" USART4_ICR @ hex. USART4_ICR USART4_ICR 1b. ;
: USART4_RDR. ." USART4_RDR (read-only) $" USART4_RDR @ hex. USART4_RDR USART4_RDR 1b. ;
: USART4_TDR. ." USART4_TDR (read-write) $" USART4_TDR @ hex. USART4_TDR USART4_TDR 1b. ;
: USART4.
USART4_CR1.
USART4_CR2.
USART4_CR3.
USART4_BRR.
USART4_GTPR.
USART4_RTOR.
USART4_RQR.
USART4_ISR.
USART4_ICR.
USART4_RDR.
USART4_TDR.
;

$4001001C constant COMP
COMP $0 +  constant  COMP_CSR
: COMP_CSR. ." COMP_CSR () $" COMP_CSR @ hex. COMP_CSR COMP_CSR 1b. ;
: COMP.
COMP_CSR.
;

$40002800 constant RTC
RTC $0 +  constant  RTC_TR
RTC $4 +  constant  RTC_DR
RTC $8 +  constant  RTC_CR
RTC $C +  constant  RTC_ISR
RTC $10 +  constant  RTC_PRER
RTC $1C +  constant  RTC_ALRMAR
RTC $24 +  constant  RTC_WPR
RTC $28 +  constant  RTC_SSR
RTC $2C +  constant  RTC_SHIFTR
RTC $30 +  constant  RTC_TSTR
RTC $34 +  constant  RTC_TSDR
RTC $38 +  constant  RTC_TSSSR
RTC $3C +  constant  RTC_CALR
RTC $40 +  constant  RTC_TAFCR
RTC $44 +  constant  RTC_ALRMASSR
RTC $50 +  constant  RTC_BKP0R
RTC $54 +  constant  RTC_BKP1R
RTC $58 +  constant  RTC_BKP2R
RTC $5C +  constant  RTC_BKP3R
RTC $60 +  constant  RTC_BKP4R
: RTC_TR. ." RTC_TR (read-write) $" RTC_TR @ hex. RTC_TR RTC_TR 1b. ;
: RTC_DR. ." RTC_DR (read-write) $" RTC_DR @ hex. RTC_DR RTC_DR 1b. ;
: RTC_CR. ." RTC_CR () $" RTC_CR @ hex. RTC_CR RTC_CR 1b. ;
: RTC_ISR. ." RTC_ISR () $" RTC_ISR @ hex. RTC_ISR RTC_ISR 1b. ;
: RTC_PRER. ." RTC_PRER (read-write) $" RTC_PRER @ hex. RTC_PRER RTC_PRER 1b. ;
: RTC_ALRMAR. ." RTC_ALRMAR (read-write) $" RTC_ALRMAR @ hex. RTC_ALRMAR RTC_ALRMAR 1b. ;
: RTC_WPR. ." RTC_WPR (write-only) $" RTC_WPR @ hex. RTC_WPR RTC_WPR 1b. ;
: RTC_SSR. ." RTC_SSR (read-only) $" RTC_SSR @ hex. RTC_SSR RTC_SSR 1b. ;
: RTC_SHIFTR. ." RTC_SHIFTR (write-only) $" RTC_SHIFTR @ hex. RTC_SHIFTR RTC_SHIFTR 1b. ;
: RTC_TSTR. ." RTC_TSTR (read-only) $" RTC_TSTR @ hex. RTC_TSTR RTC_TSTR 1b. ;
: RTC_TSDR. ." RTC_TSDR (read-only) $" RTC_TSDR @ hex. RTC_TSDR RTC_TSDR 1b. ;
: RTC_TSSSR. ." RTC_TSSSR (read-only) $" RTC_TSSSR @ hex. RTC_TSSSR RTC_TSSSR 1b. ;
: RTC_CALR. ." RTC_CALR (read-write) $" RTC_CALR @ hex. RTC_CALR RTC_CALR 1b. ;
: RTC_TAFCR. ." RTC_TAFCR (read-write) $" RTC_TAFCR @ hex. RTC_TAFCR RTC_TAFCR 1b. ;
: RTC_ALRMASSR. ." RTC_ALRMASSR (read-write) $" RTC_ALRMASSR @ hex. RTC_ALRMASSR RTC_ALRMASSR 1b. ;
: RTC_BKP0R. ." RTC_BKP0R (read-write) $" RTC_BKP0R @ hex. RTC_BKP0R RTC_BKP0R 1b. ;
: RTC_BKP1R. ." RTC_BKP1R (read-write) $" RTC_BKP1R @ hex. RTC_BKP1R RTC_BKP1R 1b. ;
: RTC_BKP2R. ." RTC_BKP2R (read-write) $" RTC_BKP2R @ hex. RTC_BKP2R RTC_BKP2R 1b. ;
: RTC_BKP3R. ." RTC_BKP3R (read-write) $" RTC_BKP3R @ hex. RTC_BKP3R RTC_BKP3R 1b. ;
: RTC_BKP4R. ." RTC_BKP4R (read-write) $" RTC_BKP4R @ hex. RTC_BKP4R RTC_BKP4R 1b. ;
: RTC.
RTC_TR.
RTC_DR.
RTC_CR.
RTC_ISR.
RTC_PRER.
RTC_ALRMAR.
RTC_WPR.
RTC_SSR.
RTC_SHIFTR.
RTC_TSTR.
RTC_TSDR.
RTC_TSSSR.
RTC_CALR.
RTC_TAFCR.
RTC_ALRMASSR.
RTC_BKP0R.
RTC_BKP1R.
RTC_BKP2R.
RTC_BKP3R.
RTC_BKP4R.
;

$40014000 constant TIM15
TIM15 $0 +  constant  TIM15_CR1
TIM15 $4 +  constant  TIM15_CR2
TIM15 $8 +  constant  TIM15_SMCR
TIM15 $C +  constant  TIM15_DIER
TIM15 $10 +  constant  TIM15_SR
TIM15 $14 +  constant  TIM15_EGR
TIM15 $18 +  constant  TIM15_CCMR1_Output
TIM15 $18 +  constant  TIM15_CCMR1_Input
TIM15 $20 +  constant  TIM15_CCER
TIM15 $24 +  constant  TIM15_CNT
TIM15 $28 +  constant  TIM15_PSC
TIM15 $2C +  constant  TIM15_ARR
TIM15 $30 +  constant  TIM15_RCR
TIM15 $34 +  constant  TIM15_CCR1
TIM15 $38 +  constant  TIM15_CCR2
TIM15 $44 +  constant  TIM15_BDTR
TIM15 $48 +  constant  TIM15_DCR
TIM15 $4C +  constant  TIM15_DMAR
: TIM15_CR1. ." TIM15_CR1 (read-write) $" TIM15_CR1 @ hex. TIM15_CR1 TIM15_CR1 1b. ;
: TIM15_CR2. ." TIM15_CR2 (read-write) $" TIM15_CR2 @ hex. TIM15_CR2 TIM15_CR2 1b. ;
: TIM15_SMCR. ." TIM15_SMCR (read-write) $" TIM15_SMCR @ hex. TIM15_SMCR TIM15_SMCR 1b. ;
: TIM15_DIER. ." TIM15_DIER (read-write) $" TIM15_DIER @ hex. TIM15_DIER TIM15_DIER 1b. ;
: TIM15_SR. ." TIM15_SR (read-write) $" TIM15_SR @ hex. TIM15_SR TIM15_SR 1b. ;
: TIM15_EGR. ." TIM15_EGR (write-only) $" TIM15_EGR @ hex. TIM15_EGR TIM15_EGR 1b. ;
: TIM15_CCMR1_Output. ." TIM15_CCMR1_Output (read-write) $" TIM15_CCMR1_Output @ hex. TIM15_CCMR1_Output TIM15_CCMR1_Output 1b. ;
: TIM15_CCMR1_Input. ." TIM15_CCMR1_Input (read-write) $" TIM15_CCMR1_Input @ hex. TIM15_CCMR1_Input TIM15_CCMR1_Input 1b. ;
: TIM15_CCER. ." TIM15_CCER (read-write) $" TIM15_CCER @ hex. TIM15_CCER TIM15_CCER 1b. ;
: TIM15_CNT. ." TIM15_CNT (read-write) $" TIM15_CNT @ hex. TIM15_CNT TIM15_CNT 1b. ;
: TIM15_PSC. ." TIM15_PSC (read-write) $" TIM15_PSC @ hex. TIM15_PSC TIM15_PSC 1b. ;
: TIM15_ARR. ." TIM15_ARR (read-write) $" TIM15_ARR @ hex. TIM15_ARR TIM15_ARR 1b. ;
: TIM15_RCR. ." TIM15_RCR (read-write) $" TIM15_RCR @ hex. TIM15_RCR TIM15_RCR 1b. ;
: TIM15_CCR1. ." TIM15_CCR1 (read-write) $" TIM15_CCR1 @ hex. TIM15_CCR1 TIM15_CCR1 1b. ;
: TIM15_CCR2. ." TIM15_CCR2 (read-write) $" TIM15_CCR2 @ hex. TIM15_CCR2 TIM15_CCR2 1b. ;
: TIM15_BDTR. ." TIM15_BDTR (read-write) $" TIM15_BDTR @ hex. TIM15_BDTR TIM15_BDTR 1b. ;
: TIM15_DCR. ." TIM15_DCR (read-write) $" TIM15_DCR @ hex. TIM15_DCR TIM15_DCR 1b. ;
: TIM15_DMAR. ." TIM15_DMAR (read-write) $" TIM15_DMAR @ hex. TIM15_DMAR TIM15_DMAR 1b. ;
: TIM15.
TIM15_CR1.
TIM15_CR2.
TIM15_SMCR.
TIM15_DIER.
TIM15_SR.
TIM15_EGR.
TIM15_CCMR1_Output.
TIM15_CCMR1_Input.
TIM15_CCER.
TIM15_CNT.
TIM15_PSC.
TIM15_ARR.
TIM15_RCR.
TIM15_CCR1.
TIM15_CCR2.
TIM15_BDTR.
TIM15_DCR.
TIM15_DMAR.
;

$40014400 constant TIM16
TIM16 $0 +  constant  TIM16_CR1
TIM16 $4 +  constant  TIM16_CR2
TIM16 $C +  constant  TIM16_DIER
TIM16 $10 +  constant  TIM16_SR
TIM16 $14 +  constant  TIM16_EGR
TIM16 $18 +  constant  TIM16_CCMR1_Output
TIM16 $18 +  constant  TIM16_CCMR1_Input
TIM16 $20 +  constant  TIM16_CCER
TIM16 $24 +  constant  TIM16_CNT
TIM16 $28 +  constant  TIM16_PSC
TIM16 $2C +  constant  TIM16_ARR
TIM16 $30 +  constant  TIM16_RCR
TIM16 $34 +  constant  TIM16_CCR1
TIM16 $44 +  constant  TIM16_BDTR
TIM16 $48 +  constant  TIM16_DCR
TIM16 $4C +  constant  TIM16_DMAR
: TIM16_CR1. ." TIM16_CR1 (read-write) $" TIM16_CR1 @ hex. TIM16_CR1 TIM16_CR1 1b. ;
: TIM16_CR2. ." TIM16_CR2 (read-write) $" TIM16_CR2 @ hex. TIM16_CR2 TIM16_CR2 1b. ;
: TIM16_DIER. ." TIM16_DIER (read-write) $" TIM16_DIER @ hex. TIM16_DIER TIM16_DIER 1b. ;
: TIM16_SR. ." TIM16_SR (read-write) $" TIM16_SR @ hex. TIM16_SR TIM16_SR 1b. ;
: TIM16_EGR. ." TIM16_EGR (write-only) $" TIM16_EGR @ hex. TIM16_EGR TIM16_EGR 1b. ;
: TIM16_CCMR1_Output. ." TIM16_CCMR1_Output (read-write) $" TIM16_CCMR1_Output @ hex. TIM16_CCMR1_Output TIM16_CCMR1_Output 1b. ;
: TIM16_CCMR1_Input. ." TIM16_CCMR1_Input (read-write) $" TIM16_CCMR1_Input @ hex. TIM16_CCMR1_Input TIM16_CCMR1_Input 1b. ;
: TIM16_CCER. ." TIM16_CCER (read-write) $" TIM16_CCER @ hex. TIM16_CCER TIM16_CCER 1b. ;
: TIM16_CNT. ." TIM16_CNT (read-write) $" TIM16_CNT @ hex. TIM16_CNT TIM16_CNT 1b. ;
: TIM16_PSC. ." TIM16_PSC (read-write) $" TIM16_PSC @ hex. TIM16_PSC TIM16_PSC 1b. ;
: TIM16_ARR. ." TIM16_ARR (read-write) $" TIM16_ARR @ hex. TIM16_ARR TIM16_ARR 1b. ;
: TIM16_RCR. ." TIM16_RCR (read-write) $" TIM16_RCR @ hex. TIM16_RCR TIM16_RCR 1b. ;
: TIM16_CCR1. ." TIM16_CCR1 (read-write) $" TIM16_CCR1 @ hex. TIM16_CCR1 TIM16_CCR1 1b. ;
: TIM16_BDTR. ." TIM16_BDTR (read-write) $" TIM16_BDTR @ hex. TIM16_BDTR TIM16_BDTR 1b. ;
: TIM16_DCR. ." TIM16_DCR (read-write) $" TIM16_DCR @ hex. TIM16_DCR TIM16_DCR 1b. ;
: TIM16_DMAR. ." TIM16_DMAR (read-write) $" TIM16_DMAR @ hex. TIM16_DMAR TIM16_DMAR 1b. ;
: TIM16.
TIM16_CR1.
TIM16_CR2.
TIM16_DIER.
TIM16_SR.
TIM16_EGR.
TIM16_CCMR1_Output.
TIM16_CCMR1_Input.
TIM16_CCER.
TIM16_CNT.
TIM16_PSC.
TIM16_ARR.
TIM16_RCR.
TIM16_CCR1.
TIM16_BDTR.
TIM16_DCR.
TIM16_DMAR.
;

$40014800 constant TIM17
TIM17 $0 +  constant  TIM17_CR1
TIM17 $4 +  constant  TIM17_CR2
TIM17 $C +  constant  TIM17_DIER
TIM17 $10 +  constant  TIM17_SR
TIM17 $14 +  constant  TIM17_EGR
TIM17 $18 +  constant  TIM17_CCMR1_Output
TIM17 $18 +  constant  TIM17_CCMR1_Input
TIM17 $20 +  constant  TIM17_CCER
TIM17 $24 +  constant  TIM17_CNT
TIM17 $28 +  constant  TIM17_PSC
TIM17 $2C +  constant  TIM17_ARR
TIM17 $30 +  constant  TIM17_RCR
TIM17 $34 +  constant  TIM17_CCR1
TIM17 $44 +  constant  TIM17_BDTR
TIM17 $48 +  constant  TIM17_DCR
TIM17 $4C +  constant  TIM17_DMAR
: TIM17_CR1. ." TIM17_CR1 (read-write) $" TIM17_CR1 @ hex. TIM17_CR1 TIM17_CR1 1b. ;
: TIM17_CR2. ." TIM17_CR2 (read-write) $" TIM17_CR2 @ hex. TIM17_CR2 TIM17_CR2 1b. ;
: TIM17_DIER. ." TIM17_DIER (read-write) $" TIM17_DIER @ hex. TIM17_DIER TIM17_DIER 1b. ;
: TIM17_SR. ." TIM17_SR (read-write) $" TIM17_SR @ hex. TIM17_SR TIM17_SR 1b. ;
: TIM17_EGR. ." TIM17_EGR (write-only) $" TIM17_EGR @ hex. TIM17_EGR TIM17_EGR 1b. ;
: TIM17_CCMR1_Output. ." TIM17_CCMR1_Output (read-write) $" TIM17_CCMR1_Output @ hex. TIM17_CCMR1_Output TIM17_CCMR1_Output 1b. ;
: TIM17_CCMR1_Input. ." TIM17_CCMR1_Input (read-write) $" TIM17_CCMR1_Input @ hex. TIM17_CCMR1_Input TIM17_CCMR1_Input 1b. ;
: TIM17_CCER. ." TIM17_CCER (read-write) $" TIM17_CCER @ hex. TIM17_CCER TIM17_CCER 1b. ;
: TIM17_CNT. ." TIM17_CNT (read-write) $" TIM17_CNT @ hex. TIM17_CNT TIM17_CNT 1b. ;
: TIM17_PSC. ." TIM17_PSC (read-write) $" TIM17_PSC @ hex. TIM17_PSC TIM17_PSC 1b. ;
: TIM17_ARR. ." TIM17_ARR (read-write) $" TIM17_ARR @ hex. TIM17_ARR TIM17_ARR 1b. ;
: TIM17_RCR. ." TIM17_RCR (read-write) $" TIM17_RCR @ hex. TIM17_RCR TIM17_RCR 1b. ;
: TIM17_CCR1. ." TIM17_CCR1 (read-write) $" TIM17_CCR1 @ hex. TIM17_CCR1 TIM17_CCR1 1b. ;
: TIM17_BDTR. ." TIM17_BDTR (read-write) $" TIM17_BDTR @ hex. TIM17_BDTR TIM17_BDTR 1b. ;
: TIM17_DCR. ." TIM17_DCR (read-write) $" TIM17_DCR @ hex. TIM17_DCR TIM17_DCR 1b. ;
: TIM17_DMAR. ." TIM17_DMAR (read-write) $" TIM17_DMAR @ hex. TIM17_DMAR TIM17_DMAR 1b. ;
: TIM17.
TIM17_CR1.
TIM17_CR2.
TIM17_DIER.
TIM17_SR.
TIM17_EGR.
TIM17_CCMR1_Output.
TIM17_CCMR1_Input.
TIM17_CCER.
TIM17_CNT.
TIM17_PSC.
TIM17_ARR.
TIM17_RCR.
TIM17_CCR1.
TIM17_BDTR.
TIM17_DCR.
TIM17_DMAR.
;

$40024000 constant TSC
TSC $0 +  constant  TSC_CR
TSC $4 +  constant  TSC_IER
TSC $8 +  constant  TSC_ICR
TSC $C +  constant  TSC_ISR
TSC $10 +  constant  TSC_IOHCR
TSC $18 +  constant  TSC_IOASCR
TSC $20 +  constant  TSC_IOSCR
TSC $28 +  constant  TSC_IOCCR
TSC $30 +  constant  TSC_IOGCSR
TSC $34 +  constant  TSC_IOG1CR
TSC $38 +  constant  TSC_IOG2CR
TSC $3C +  constant  TSC_IOG3CR
TSC $40 +  constant  TSC_IOG4CR
TSC $44 +  constant  TSC_IOG5CR
TSC $48 +  constant  TSC_IOG6CR
: TSC_CR. ." TSC_CR (read-write) $" TSC_CR @ hex. TSC_CR TSC_CR 1b. ;
: TSC_IER. ." TSC_IER (read-write) $" TSC_IER @ hex. TSC_IER TSC_IER 1b. ;
: TSC_ICR. ." TSC_ICR (read-write) $" TSC_ICR @ hex. TSC_ICR TSC_ICR 1b. ;
: TSC_ISR. ." TSC_ISR (read-write) $" TSC_ISR @ hex. TSC_ISR TSC_ISR 1b. ;
: TSC_IOHCR. ." TSC_IOHCR (read-write) $" TSC_IOHCR @ hex. TSC_IOHCR TSC_IOHCR 1b. ;
: TSC_IOASCR. ." TSC_IOASCR (read-write) $" TSC_IOASCR @ hex. TSC_IOASCR TSC_IOASCR 1b. ;
: TSC_IOSCR. ." TSC_IOSCR (read-write) $" TSC_IOSCR @ hex. TSC_IOSCR TSC_IOSCR 1b. ;
: TSC_IOCCR. ." TSC_IOCCR (read-write) $" TSC_IOCCR @ hex. TSC_IOCCR TSC_IOCCR 1b. ;
: TSC_IOGCSR. ." TSC_IOGCSR () $" TSC_IOGCSR @ hex. TSC_IOGCSR TSC_IOGCSR 1b. ;
: TSC_IOG1CR. ." TSC_IOG1CR (read-only) $" TSC_IOG1CR @ hex. TSC_IOG1CR TSC_IOG1CR 1b. ;
: TSC_IOG2CR. ." TSC_IOG2CR (read-only) $" TSC_IOG2CR @ hex. TSC_IOG2CR TSC_IOG2CR 1b. ;
: TSC_IOG3CR. ." TSC_IOG3CR (read-only) $" TSC_IOG3CR @ hex. TSC_IOG3CR TSC_IOG3CR 1b. ;
: TSC_IOG4CR. ." TSC_IOG4CR (read-only) $" TSC_IOG4CR @ hex. TSC_IOG4CR TSC_IOG4CR 1b. ;
: TSC_IOG5CR. ." TSC_IOG5CR (read-only) $" TSC_IOG5CR @ hex. TSC_IOG5CR TSC_IOG5CR 1b. ;
: TSC_IOG6CR. ." TSC_IOG6CR (read-only) $" TSC_IOG6CR @ hex. TSC_IOG6CR TSC_IOG6CR 1b. ;
: TSC.
TSC_CR.
TSC_IER.
TSC_ICR.
TSC_ISR.
TSC_IOHCR.
TSC_IOASCR.
TSC_IOSCR.
TSC_IOCCR.
TSC_IOGCSR.
TSC_IOG1CR.
TSC_IOG2CR.
TSC_IOG3CR.
TSC_IOG4CR.
TSC_IOG5CR.
TSC_IOG6CR.
;

$40007800 constant CEC
CEC $0 +  constant  CEC_CR
CEC $4 +  constant  CEC_CFGR
CEC $8 +  constant  CEC_TXDR
CEC $C +  constant  CEC_RXDR
CEC $10 +  constant  CEC_ISR
CEC $14 +  constant  CEC_IER
: CEC_CR. ." CEC_CR (read-write) $" CEC_CR @ hex. CEC_CR CEC_CR 1b. ;
: CEC_CFGR. ." CEC_CFGR (read-write) $" CEC_CFGR @ hex. CEC_CFGR CEC_CFGR 1b. ;
: CEC_TXDR. ." CEC_TXDR (write-only) $" CEC_TXDR @ hex. CEC_TXDR CEC_TXDR 1b. ;
: CEC_RXDR. ." CEC_RXDR (read-only) $" CEC_RXDR @ hex. CEC_RXDR CEC_RXDR 1b. ;
: CEC_ISR. ." CEC_ISR (read-write) $" CEC_ISR @ hex. CEC_ISR CEC_ISR 1b. ;
: CEC_IER. ." CEC_IER (read-write) $" CEC_IER @ hex. CEC_IER CEC_IER 1b. ;
: CEC.
CEC_CR.
CEC_CFGR.
CEC_TXDR.
CEC_RXDR.
CEC_ISR.
CEC_IER.
;

$40022000 constant Flash
Flash $0 +  constant  Flash_ACR
Flash $4 +  constant  Flash_KEYR
Flash $8 +  constant  Flash_OPTKEYR
Flash $C +  constant  Flash_SR
Flash $10 +  constant  Flash_CR
Flash $14 +  constant  Flash_AR
Flash $1C +  constant  Flash_OBR
Flash $20 +  constant  Flash_WRPR
: Flash_ACR. ." Flash_ACR () $" Flash_ACR @ hex. Flash_ACR Flash_ACR 1b. ;
: Flash_KEYR. ." Flash_KEYR (write-only) $" Flash_KEYR @ hex. Flash_KEYR Flash_KEYR 1b. ;
: Flash_OPTKEYR. ." Flash_OPTKEYR (write-only) $" Flash_OPTKEYR @ hex. Flash_OPTKEYR Flash_OPTKEYR 1b. ;
: Flash_SR. ." Flash_SR () $" Flash_SR @ hex. Flash_SR Flash_SR 1b. ;
: Flash_CR. ." Flash_CR (read-write) $" Flash_CR @ hex. Flash_CR Flash_CR 1b. ;
: Flash_AR. ." Flash_AR (write-only) $" Flash_AR @ hex. Flash_AR Flash_AR 1b. ;
: Flash_OBR. ." Flash_OBR (read-only) $" Flash_OBR @ hex. Flash_OBR Flash_OBR 1b. ;
: Flash_WRPR. ." Flash_WRPR (read-only) $" Flash_WRPR @ hex. Flash_WRPR Flash_WRPR 1b. ;
: Flash.
Flash_ACR.
Flash_KEYR.
Flash_OPTKEYR.
Flash_SR.
Flash_CR.
Flash_AR.
Flash_OBR.
Flash_WRPR.
;

$40015800 constant DBGMCU
DBGMCU $0 +  constant  DBGMCU_IDCODE
DBGMCU $4 +  constant  DBGMCU_CR
DBGMCU $8 +  constant  DBGMCU_APBLFZ
DBGMCU $C +  constant  DBGMCU_APBHFZ
: DBGMCU_IDCODE. ." DBGMCU_IDCODE (read-only) $" DBGMCU_IDCODE @ hex. DBGMCU_IDCODE DBGMCU_IDCODE 1b. ;
: DBGMCU_CR. ." DBGMCU_CR (read-write) $" DBGMCU_CR @ hex. DBGMCU_CR DBGMCU_CR 1b. ;
: DBGMCU_APBLFZ. ." DBGMCU_APBLFZ (read-write) $" DBGMCU_APBLFZ @ hex. DBGMCU_APBLFZ DBGMCU_APBLFZ 1b. ;
: DBGMCU_APBHFZ. ." DBGMCU_APBHFZ (read-write) $" DBGMCU_APBHFZ @ hex. DBGMCU_APBHFZ DBGMCU_APBHFZ 1b. ;
: DBGMCU.
DBGMCU_IDCODE.
DBGMCU_CR.
DBGMCU_APBLFZ.
DBGMCU_APBHFZ.
;

$40005C00 constant USB
USB $0 +  constant  USB_EP0R
USB $4 +  constant  USB_EP1R
USB $8 +  constant  USB_EP2R
USB $C +  constant  USB_EP3R
USB $10 +  constant  USB_EP4R
USB $14 +  constant  USB_EP5R
USB $18 +  constant  USB_EP6R
USB $1C +  constant  USB_EP7R
USB $40 +  constant  USB_CNTR
USB $44 +  constant  USB_ISTR
USB $48 +  constant  USB_FNR
USB $4C +  constant  USB_DADDR
USB $50 +  constant  USB_BTABLE
USB $54 +  constant  USB_LPMCSR
USB $58 +  constant  USB_BCDR
: USB_EP0R. ." USB_EP0R (read-write) $" USB_EP0R @ hex. USB_EP0R USB_EP0R 1b. ;
: USB_EP1R. ." USB_EP1R (read-write) $" USB_EP1R @ hex. USB_EP1R USB_EP1R 1b. ;
: USB_EP2R. ." USB_EP2R (read-write) $" USB_EP2R @ hex. USB_EP2R USB_EP2R 1b. ;
: USB_EP3R. ." USB_EP3R (read-write) $" USB_EP3R @ hex. USB_EP3R USB_EP3R 1b. ;
: USB_EP4R. ." USB_EP4R (read-write) $" USB_EP4R @ hex. USB_EP4R USB_EP4R 1b. ;
: USB_EP5R. ." USB_EP5R (read-write) $" USB_EP5R @ hex. USB_EP5R USB_EP5R 1b. ;
: USB_EP6R. ." USB_EP6R (read-write) $" USB_EP6R @ hex. USB_EP6R USB_EP6R 1b. ;
: USB_EP7R. ." USB_EP7R (read-write) $" USB_EP7R @ hex. USB_EP7R USB_EP7R 1b. ;
: USB_CNTR. ." USB_CNTR (read-write) $" USB_CNTR @ hex. USB_CNTR USB_CNTR 1b. ;
: USB_ISTR. ." USB_ISTR () $" USB_ISTR @ hex. USB_ISTR USB_ISTR 1b. ;
: USB_FNR. ." USB_FNR (read-only) $" USB_FNR @ hex. USB_FNR USB_FNR 1b. ;
: USB_DADDR. ." USB_DADDR (read-write) $" USB_DADDR @ hex. USB_DADDR USB_DADDR 1b. ;
: USB_BTABLE. ." USB_BTABLE (read-write) $" USB_BTABLE @ hex. USB_BTABLE USB_BTABLE 1b. ;
: USB_LPMCSR. ." USB_LPMCSR () $" USB_LPMCSR @ hex. USB_LPMCSR USB_LPMCSR 1b. ;
: USB_BCDR. ." USB_BCDR () $" USB_BCDR @ hex. USB_BCDR USB_BCDR 1b. ;
: USB.
USB_EP0R.
USB_EP1R.
USB_EP2R.
USB_EP3R.
USB_EP4R.
USB_EP5R.
USB_EP6R.
USB_EP7R.
USB_CNTR.
USB_ISTR.
USB_FNR.
USB_DADDR.
USB_BTABLE.
USB_LPMCSR.
USB_BCDR.
;

$40006C00 constant CRS
CRS $0 +  constant  CRS_CR
CRS $4 +  constant  CRS_CFGR
CRS $8 +  constant  CRS_ISR
CRS $C +  constant  CRS_ICR
: CRS_CR. ." CRS_CR (read-write) $" CRS_CR @ hex. CRS_CR CRS_CR 1b. ;
: CRS_CFGR. ." CRS_CFGR (read-write) $" CRS_CFGR @ hex. CRS_CFGR CRS_CFGR 1b. ;
: CRS_ISR. ." CRS_ISR (read-only) $" CRS_ISR @ hex. CRS_ISR CRS_ISR 1b. ;
: CRS_ICR. ." CRS_ICR (read-write) $" CRS_ICR @ hex. CRS_ICR CRS_ICR 1b. ;
: CRS.
CRS_CR.
CRS_CFGR.
CRS_ISR.
CRS_ICR.
;

$40006400 constant CAN
CAN $0 +  constant  CAN_CAN_MCR
CAN $4 +  constant  CAN_CAN_MSR
CAN $8 +  constant  CAN_CAN_TSR
CAN $C +  constant  CAN_CAN_RF0R
CAN $10 +  constant  CAN_CAN_RF1R
CAN $14 +  constant  CAN_CAN_IER
CAN $18 +  constant  CAN_CAN_ESR
CAN $1C +  constant  CAN_CAN_BTR
CAN $180 +  constant  CAN_CAN_TI0R
CAN $184 +  constant  CAN_CAN_TDT0R
CAN $188 +  constant  CAN_CAN_TDL0R
CAN $18C +  constant  CAN_CAN_TDH0R
CAN $190 +  constant  CAN_CAN_TI1R
CAN $194 +  constant  CAN_CAN_TDT1R
CAN $198 +  constant  CAN_CAN_TDL1R
CAN $19C +  constant  CAN_CAN_TDH1R
CAN $1A0 +  constant  CAN_CAN_TI2R
CAN $1A4 +  constant  CAN_CAN_TDT2R
CAN $1A8 +  constant  CAN_CAN_TDL2R
CAN $1AC +  constant  CAN_CAN_TDH2R
CAN $1B0 +  constant  CAN_CAN_RI0R
CAN $1B4 +  constant  CAN_CAN_RDT0R
CAN $1B8 +  constant  CAN_CAN_RDL0R
CAN $1BC +  constant  CAN_CAN_RDH0R
CAN $1C0 +  constant  CAN_CAN_RI1R
CAN $1C4 +  constant  CAN_CAN_RDT1R
CAN $1C8 +  constant  CAN_CAN_RDL1R
CAN $1CC +  constant  CAN_CAN_RDH1R
CAN $200 +  constant  CAN_CAN_FMR
CAN $204 +  constant  CAN_CAN_FM1R
CAN $20C +  constant  CAN_CAN_FS1R
CAN $214 +  constant  CAN_CAN_FFA1R
CAN $21C +  constant  CAN_CAN_FA1R
CAN $240 +  constant  CAN_F0R1
CAN $244 +  constant  CAN_F0R2
CAN $248 +  constant  CAN_F1R1
CAN $24C +  constant  CAN_F1R2
CAN $250 +  constant  CAN_F2R1
CAN $254 +  constant  CAN_F2R2
CAN $258 +  constant  CAN_F3R1
CAN $25C +  constant  CAN_F3R2
CAN $260 +  constant  CAN_F4R1
CAN $264 +  constant  CAN_F4R2
CAN $268 +  constant  CAN_F5R1
CAN $26C +  constant  CAN_F5R2
CAN $270 +  constant  CAN_F6R1
CAN $274 +  constant  CAN_F6R2
CAN $278 +  constant  CAN_F7R1
CAN $27C +  constant  CAN_F7R2
CAN $280 +  constant  CAN_F8R1
CAN $284 +  constant  CAN_F8R2
CAN $288 +  constant  CAN_F9R1
CAN $28C +  constant  CAN_F9R2
CAN $290 +  constant  CAN_F10R1
CAN $294 +  constant  CAN_F10R2
CAN $298 +  constant  CAN_F11R1
CAN $29C +  constant  CAN_F11R2
CAN $2A0 +  constant  CAN_F12R1
CAN $2A4 +  constant  CAN_F12R2
CAN $2A8 +  constant  CAN_F13R1
CAN $2AC +  constant  CAN_F13R2
CAN $2B0 +  constant  CAN_F14R1
CAN $2B4 +  constant  CAN_F14R2
CAN $2B8 +  constant  CAN_F15R1
CAN $2BC +  constant  CAN_F15R2
CAN $2C0 +  constant  CAN_F16R1
CAN $2C4 +  constant  CAN_F16R2
CAN $2C8 +  constant  CAN_F17R1
CAN $2CC +  constant  CAN_F17R2
CAN $2D0 +  constant  CAN_F18R1
CAN $2D4 +  constant  CAN_F18R2
CAN $2D8 +  constant  CAN_F19R1
CAN $2DC +  constant  CAN_F19R2
CAN $2E0 +  constant  CAN_F20R1
CAN $2E4 +  constant  CAN_F20R2
CAN $2E8 +  constant  CAN_F21R1
CAN $2EC +  constant  CAN_F21R2
CAN $2F0 +  constant  CAN_F22R1
CAN $2F4 +  constant  CAN_F22R2
CAN $2F8 +  constant  CAN_F23R1
CAN $2FC +  constant  CAN_F23R2
CAN $300 +  constant  CAN_F24R1
CAN $304 +  constant  CAN_F24R2
CAN $308 +  constant  CAN_F25R1
CAN $30C +  constant  CAN_F25R2
CAN $310 +  constant  CAN_F26R1
CAN $314 +  constant  CAN_F26R2
CAN $318 +  constant  CAN_F27R1
CAN $31C +  constant  CAN_F27R2
: CAN_CAN_MCR. ." CAN_CAN_MCR (read-write) $" CAN_CAN_MCR @ hex. CAN_CAN_MCR CAN_CAN_MCR 1b. ;
: CAN_CAN_MSR. ." CAN_CAN_MSR () $" CAN_CAN_MSR @ hex. CAN_CAN_MSR CAN_CAN_MSR 1b. ;
: CAN_CAN_TSR. ." CAN_CAN_TSR () $" CAN_CAN_TSR @ hex. CAN_CAN_TSR CAN_CAN_TSR 1b. ;
: CAN_CAN_RF0R. ." CAN_CAN_RF0R () $" CAN_CAN_RF0R @ hex. CAN_CAN_RF0R CAN_CAN_RF0R 1b. ;
: CAN_CAN_RF1R. ." CAN_CAN_RF1R () $" CAN_CAN_RF1R @ hex. CAN_CAN_RF1R CAN_CAN_RF1R 1b. ;
: CAN_CAN_IER. ." CAN_CAN_IER (read-write) $" CAN_CAN_IER @ hex. CAN_CAN_IER CAN_CAN_IER 1b. ;
: CAN_CAN_ESR. ." CAN_CAN_ESR () $" CAN_CAN_ESR @ hex. CAN_CAN_ESR CAN_CAN_ESR 1b. ;
: CAN_CAN_BTR. ." CAN_CAN_BTR (read-write) $" CAN_CAN_BTR @ hex. CAN_CAN_BTR CAN_CAN_BTR 1b. ;
: CAN_CAN_TI0R. ." CAN_CAN_TI0R (read-write) $" CAN_CAN_TI0R @ hex. CAN_CAN_TI0R CAN_CAN_TI0R 1b. ;
: CAN_CAN_TDT0R. ." CAN_CAN_TDT0R (read-write) $" CAN_CAN_TDT0R @ hex. CAN_CAN_TDT0R CAN_CAN_TDT0R 1b. ;
: CAN_CAN_TDL0R. ." CAN_CAN_TDL0R (read-write) $" CAN_CAN_TDL0R @ hex. CAN_CAN_TDL0R CAN_CAN_TDL0R 1b. ;
: CAN_CAN_TDH0R. ." CAN_CAN_TDH0R (read-write) $" CAN_CAN_TDH0R @ hex. CAN_CAN_TDH0R CAN_CAN_TDH0R 1b. ;
: CAN_CAN_TI1R. ." CAN_CAN_TI1R (read-write) $" CAN_CAN_TI1R @ hex. CAN_CAN_TI1R CAN_CAN_TI1R 1b. ;
: CAN_CAN_TDT1R. ." CAN_CAN_TDT1R (read-write) $" CAN_CAN_TDT1R @ hex. CAN_CAN_TDT1R CAN_CAN_TDT1R 1b. ;
: CAN_CAN_TDL1R. ." CAN_CAN_TDL1R (read-write) $" CAN_CAN_TDL1R @ hex. CAN_CAN_TDL1R CAN_CAN_TDL1R 1b. ;
: CAN_CAN_TDH1R. ." CAN_CAN_TDH1R (read-write) $" CAN_CAN_TDH1R @ hex. CAN_CAN_TDH1R CAN_CAN_TDH1R 1b. ;
: CAN_CAN_TI2R. ." CAN_CAN_TI2R (read-write) $" CAN_CAN_TI2R @ hex. CAN_CAN_TI2R CAN_CAN_TI2R 1b. ;
: CAN_CAN_TDT2R. ." CAN_CAN_TDT2R (read-write) $" CAN_CAN_TDT2R @ hex. CAN_CAN_TDT2R CAN_CAN_TDT2R 1b. ;
: CAN_CAN_TDL2R. ." CAN_CAN_TDL2R (read-write) $" CAN_CAN_TDL2R @ hex. CAN_CAN_TDL2R CAN_CAN_TDL2R 1b. ;
: CAN_CAN_TDH2R. ." CAN_CAN_TDH2R (read-write) $" CAN_CAN_TDH2R @ hex. CAN_CAN_TDH2R CAN_CAN_TDH2R 1b. ;
: CAN_CAN_RI0R. ." CAN_CAN_RI0R (read-only) $" CAN_CAN_RI0R @ hex. CAN_CAN_RI0R CAN_CAN_RI0R 1b. ;
: CAN_CAN_RDT0R. ." CAN_CAN_RDT0R (read-only) $" CAN_CAN_RDT0R @ hex. CAN_CAN_RDT0R CAN_CAN_RDT0R 1b. ;
: CAN_CAN_RDL0R. ." CAN_CAN_RDL0R (read-only) $" CAN_CAN_RDL0R @ hex. CAN_CAN_RDL0R CAN_CAN_RDL0R 1b. ;
: CAN_CAN_RDH0R. ." CAN_CAN_RDH0R (read-only) $" CAN_CAN_RDH0R @ hex. CAN_CAN_RDH0R CAN_CAN_RDH0R 1b. ;
: CAN_CAN_RI1R. ." CAN_CAN_RI1R (read-only) $" CAN_CAN_RI1R @ hex. CAN_CAN_RI1R CAN_CAN_RI1R 1b. ;
: CAN_CAN_RDT1R. ." CAN_CAN_RDT1R (read-only) $" CAN_CAN_RDT1R @ hex. CAN_CAN_RDT1R CAN_CAN_RDT1R 1b. ;
: CAN_CAN_RDL1R. ." CAN_CAN_RDL1R (read-only) $" CAN_CAN_RDL1R @ hex. CAN_CAN_RDL1R CAN_CAN_RDL1R 1b. ;
: CAN_CAN_RDH1R. ." CAN_CAN_RDH1R (read-only) $" CAN_CAN_RDH1R @ hex. CAN_CAN_RDH1R CAN_CAN_RDH1R 1b. ;
: CAN_CAN_FMR. ." CAN_CAN_FMR (read-write) $" CAN_CAN_FMR @ hex. CAN_CAN_FMR CAN_CAN_FMR 1b. ;
: CAN_CAN_FM1R. ." CAN_CAN_FM1R (read-write) $" CAN_CAN_FM1R @ hex. CAN_CAN_FM1R CAN_CAN_FM1R 1b. ;
: CAN_CAN_FS1R. ." CAN_CAN_FS1R (read-write) $" CAN_CAN_FS1R @ hex. CAN_CAN_FS1R CAN_CAN_FS1R 1b. ;
: CAN_CAN_FFA1R. ." CAN_CAN_FFA1R (read-write) $" CAN_CAN_FFA1R @ hex. CAN_CAN_FFA1R CAN_CAN_FFA1R 1b. ;
: CAN_CAN_FA1R. ." CAN_CAN_FA1R (read-write) $" CAN_CAN_FA1R @ hex. CAN_CAN_FA1R CAN_CAN_FA1R 1b. ;
: CAN_F0R1. ." CAN_F0R1 (read-write) $" CAN_F0R1 @ hex. CAN_F0R1 CAN_F0R1 1b. ;
: CAN_F0R2. ." CAN_F0R2 (read-write) $" CAN_F0R2 @ hex. CAN_F0R2 CAN_F0R2 1b. ;
: CAN_F1R1. ." CAN_F1R1 (read-write) $" CAN_F1R1 @ hex. CAN_F1R1 CAN_F1R1 1b. ;
: CAN_F1R2. ." CAN_F1R2 (read-write) $" CAN_F1R2 @ hex. CAN_F1R2 CAN_F1R2 1b. ;
: CAN_F2R1. ." CAN_F2R1 (read-write) $" CAN_F2R1 @ hex. CAN_F2R1 CAN_F2R1 1b. ;
: CAN_F2R2. ." CAN_F2R2 (read-write) $" CAN_F2R2 @ hex. CAN_F2R2 CAN_F2R2 1b. ;
: CAN_F3R1. ." CAN_F3R1 (read-write) $" CAN_F3R1 @ hex. CAN_F3R1 CAN_F3R1 1b. ;
: CAN_F3R2. ." CAN_F3R2 (read-write) $" CAN_F3R2 @ hex. CAN_F3R2 CAN_F3R2 1b. ;
: CAN_F4R1. ." CAN_F4R1 (read-write) $" CAN_F4R1 @ hex. CAN_F4R1 CAN_F4R1 1b. ;
: CAN_F4R2. ." CAN_F4R2 (read-write) $" CAN_F4R2 @ hex. CAN_F4R2 CAN_F4R2 1b. ;
: CAN_F5R1. ." CAN_F5R1 (read-write) $" CAN_F5R1 @ hex. CAN_F5R1 CAN_F5R1 1b. ;
: CAN_F5R2. ." CAN_F5R2 (read-write) $" CAN_F5R2 @ hex. CAN_F5R2 CAN_F5R2 1b. ;
: CAN_F6R1. ." CAN_F6R1 (read-write) $" CAN_F6R1 @ hex. CAN_F6R1 CAN_F6R1 1b. ;
: CAN_F6R2. ." CAN_F6R2 (read-write) $" CAN_F6R2 @ hex. CAN_F6R2 CAN_F6R2 1b. ;
: CAN_F7R1. ." CAN_F7R1 (read-write) $" CAN_F7R1 @ hex. CAN_F7R1 CAN_F7R1 1b. ;
: CAN_F7R2. ." CAN_F7R2 (read-write) $" CAN_F7R2 @ hex. CAN_F7R2 CAN_F7R2 1b. ;
: CAN_F8R1. ." CAN_F8R1 (read-write) $" CAN_F8R1 @ hex. CAN_F8R1 CAN_F8R1 1b. ;
: CAN_F8R2. ." CAN_F8R2 (read-write) $" CAN_F8R2 @ hex. CAN_F8R2 CAN_F8R2 1b. ;
: CAN_F9R1. ." CAN_F9R1 (read-write) $" CAN_F9R1 @ hex. CAN_F9R1 CAN_F9R1 1b. ;
: CAN_F9R2. ." CAN_F9R2 (read-write) $" CAN_F9R2 @ hex. CAN_F9R2 CAN_F9R2 1b. ;
: CAN_F10R1. ." CAN_F10R1 (read-write) $" CAN_F10R1 @ hex. CAN_F10R1 CAN_F10R1 1b. ;
: CAN_F10R2. ." CAN_F10R2 (read-write) $" CAN_F10R2 @ hex. CAN_F10R2 CAN_F10R2 1b. ;
: CAN_F11R1. ." CAN_F11R1 (read-write) $" CAN_F11R1 @ hex. CAN_F11R1 CAN_F11R1 1b. ;
: CAN_F11R2. ." CAN_F11R2 (read-write) $" CAN_F11R2 @ hex. CAN_F11R2 CAN_F11R2 1b. ;
: CAN_F12R1. ." CAN_F12R1 (read-write) $" CAN_F12R1 @ hex. CAN_F12R1 CAN_F12R1 1b. ;
: CAN_F12R2. ." CAN_F12R2 (read-write) $" CAN_F12R2 @ hex. CAN_F12R2 CAN_F12R2 1b. ;
: CAN_F13R1. ." CAN_F13R1 (read-write) $" CAN_F13R1 @ hex. CAN_F13R1 CAN_F13R1 1b. ;
: CAN_F13R2. ." CAN_F13R2 (read-write) $" CAN_F13R2 @ hex. CAN_F13R2 CAN_F13R2 1b. ;
: CAN_F14R1. ." CAN_F14R1 (read-write) $" CAN_F14R1 @ hex. CAN_F14R1 CAN_F14R1 1b. ;
: CAN_F14R2. ." CAN_F14R2 (read-write) $" CAN_F14R2 @ hex. CAN_F14R2 CAN_F14R2 1b. ;
: CAN_F15R1. ." CAN_F15R1 (read-write) $" CAN_F15R1 @ hex. CAN_F15R1 CAN_F15R1 1b. ;
: CAN_F15R2. ." CAN_F15R2 (read-write) $" CAN_F15R2 @ hex. CAN_F15R2 CAN_F15R2 1b. ;
: CAN_F16R1. ." CAN_F16R1 (read-write) $" CAN_F16R1 @ hex. CAN_F16R1 CAN_F16R1 1b. ;
: CAN_F16R2. ." CAN_F16R2 (read-write) $" CAN_F16R2 @ hex. CAN_F16R2 CAN_F16R2 1b. ;
: CAN_F17R1. ." CAN_F17R1 (read-write) $" CAN_F17R1 @ hex. CAN_F17R1 CAN_F17R1 1b. ;
: CAN_F17R2. ." CAN_F17R2 (read-write) $" CAN_F17R2 @ hex. CAN_F17R2 CAN_F17R2 1b. ;
: CAN_F18R1. ." CAN_F18R1 (read-write) $" CAN_F18R1 @ hex. CAN_F18R1 CAN_F18R1 1b. ;
: CAN_F18R2. ." CAN_F18R2 (read-write) $" CAN_F18R2 @ hex. CAN_F18R2 CAN_F18R2 1b. ;
: CAN_F19R1. ." CAN_F19R1 (read-write) $" CAN_F19R1 @ hex. CAN_F19R1 CAN_F19R1 1b. ;
: CAN_F19R2. ." CAN_F19R2 (read-write) $" CAN_F19R2 @ hex. CAN_F19R2 CAN_F19R2 1b. ;
: CAN_F20R1. ." CAN_F20R1 (read-write) $" CAN_F20R1 @ hex. CAN_F20R1 CAN_F20R1 1b. ;
: CAN_F20R2. ." CAN_F20R2 (read-write) $" CAN_F20R2 @ hex. CAN_F20R2 CAN_F20R2 1b. ;
: CAN_F21R1. ." CAN_F21R1 (read-write) $" CAN_F21R1 @ hex. CAN_F21R1 CAN_F21R1 1b. ;
: CAN_F21R2. ." CAN_F21R2 (read-write) $" CAN_F21R2 @ hex. CAN_F21R2 CAN_F21R2 1b. ;
: CAN_F22R1. ." CAN_F22R1 (read-write) $" CAN_F22R1 @ hex. CAN_F22R1 CAN_F22R1 1b. ;
: CAN_F22R2. ." CAN_F22R2 (read-write) $" CAN_F22R2 @ hex. CAN_F22R2 CAN_F22R2 1b. ;
: CAN_F23R1. ." CAN_F23R1 (read-write) $" CAN_F23R1 @ hex. CAN_F23R1 CAN_F23R1 1b. ;
: CAN_F23R2. ." CAN_F23R2 (read-write) $" CAN_F23R2 @ hex. CAN_F23R2 CAN_F23R2 1b. ;
: CAN_F24R1. ." CAN_F24R1 (read-write) $" CAN_F24R1 @ hex. CAN_F24R1 CAN_F24R1 1b. ;
: CAN_F24R2. ." CAN_F24R2 (read-write) $" CAN_F24R2 @ hex. CAN_F24R2 CAN_F24R2 1b. ;
: CAN_F25R1. ." CAN_F25R1 (read-write) $" CAN_F25R1 @ hex. CAN_F25R1 CAN_F25R1 1b. ;
: CAN_F25R2. ." CAN_F25R2 (read-write) $" CAN_F25R2 @ hex. CAN_F25R2 CAN_F25R2 1b. ;
: CAN_F26R1. ." CAN_F26R1 (read-write) $" CAN_F26R1 @ hex. CAN_F26R1 CAN_F26R1 1b. ;
: CAN_F26R2. ." CAN_F26R2 (read-write) $" CAN_F26R2 @ hex. CAN_F26R2 CAN_F26R2 1b. ;
: CAN_F27R1. ." CAN_F27R1 (read-write) $" CAN_F27R1 @ hex. CAN_F27R1 CAN_F27R1 1b. ;
: CAN_F27R2. ." CAN_F27R2 (read-write) $" CAN_F27R2 @ hex. CAN_F27R2 CAN_F27R2 1b. ;
: CAN.
CAN_CAN_MCR.
CAN_CAN_MSR.
CAN_CAN_TSR.
CAN_CAN_RF0R.
CAN_CAN_RF1R.
CAN_CAN_IER.
CAN_CAN_ESR.
CAN_CAN_BTR.
CAN_CAN_TI0R.
CAN_CAN_TDT0R.
CAN_CAN_TDL0R.
CAN_CAN_TDH0R.
CAN_CAN_TI1R.
CAN_CAN_TDT1R.
CAN_CAN_TDL1R.
CAN_CAN_TDH1R.
CAN_CAN_TI2R.
CAN_CAN_TDT2R.
CAN_CAN_TDL2R.
CAN_CAN_TDH2R.
CAN_CAN_RI0R.
CAN_CAN_RDT0R.
CAN_CAN_RDL0R.
CAN_CAN_RDH0R.
CAN_CAN_RI1R.
CAN_CAN_RDT1R.
CAN_CAN_RDL1R.
CAN_CAN_RDH1R.
CAN_CAN_FMR.
CAN_CAN_FM1R.
CAN_CAN_FS1R.
CAN_CAN_FFA1R.
CAN_CAN_FA1R.
CAN_F0R1.
CAN_F0R2.
CAN_F1R1.
CAN_F1R2.
CAN_F2R1.
CAN_F2R2.
CAN_F3R1.
CAN_F3R2.
CAN_F4R1.
CAN_F4R2.
CAN_F5R1.
CAN_F5R2.
CAN_F6R1.
CAN_F6R2.
CAN_F7R1.
CAN_F7R2.
CAN_F8R1.
CAN_F8R2.
CAN_F9R1.
CAN_F9R2.
CAN_F10R1.
CAN_F10R2.
CAN_F11R1.
CAN_F11R2.
CAN_F12R1.
CAN_F12R2.
CAN_F13R1.
CAN_F13R2.
CAN_F14R1.
CAN_F14R2.
CAN_F15R1.
CAN_F15R2.
CAN_F16R1.
CAN_F16R2.
CAN_F17R1.
CAN_F17R2.
CAN_F18R1.
CAN_F18R2.
CAN_F19R1.
CAN_F19R2.
CAN_F20R1.
CAN_F20R2.
CAN_F21R1.
CAN_F21R2.
CAN_F22R1.
CAN_F22R2.
CAN_F23R1.
CAN_F23R2.
CAN_F24R1.
CAN_F24R2.
CAN_F25R1.
CAN_F25R2.
CAN_F26R1.
CAN_F26R2.
CAN_F27R1.
CAN_F27R2.
;

